{"version":3,"sources":["webpack://module.exports/webpack/bootstrap","webpack://module.exports/external \"flarum.core.compat['extend']\"","webpack://module.exports/external \"flarum.core.compat['utils/ItemList']\"","webpack://module.exports/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://module.exports/external \"flarum.core.compat['components/Button']\"","webpack://module.exports/external \"flarum.core.compat['models/Discussion']\"","webpack://module.exports/external \"flarum.core.compat['models/User']\"","webpack://module.exports/external \"flarum.core.compat['models/Group']\"","webpack://module.exports/external \"flarum.core.compat['Model']\"","webpack://module.exports/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://module.exports/external \"flarum.core.compat['helpers/highlight']\"","webpack://module.exports/external \"flarum.core.compat['helpers/username']\"","webpack://module.exports/external \"flarum.core.compat['utils/extract']\"","webpack://module.exports/external \"flarum.core.compat['components/DiscussionList']\"","webpack://module.exports/external \"flarum.core.compat['helpers/listItems']\"","webpack://module.exports/external \"flarum.core.compat['utils/classList']\"","webpack://module.exports/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://module.exports/./src/forum/components/sources/UserSearchSource.js","webpack://module.exports/./src/forum/components/sources/GroupSearchSource.js","webpack://module.exports/./src/common/helpers/recipientLabel.js","webpack://module.exports/./src/forum/components/RecipientSearch.js","webpack://module.exports/./src/forum/components/AddRecipientModal.js","webpack://module.exports/./src/common/helpers/recipientCountLabel.js","webpack://module.exports/./src/forum/addRecipientComposer.js","webpack://module.exports/./src/common/helpers/recipientsLabel.js","webpack://module.exports/./src/forum/addRecipientLabels.js","webpack://module.exports/./src/forum/addRecipientsControl.js","webpack://module.exports/./src/forum/addHasRecipientsBadge.js","webpack://module.exports/./src/forum/addDiscussPrivatelyControl.js","webpack://module.exports/./src/forum/components/PrivateDiscussionList.js","webpack://module.exports/./src/forum/components/PrivateDiscussionIndex.js","webpack://module.exports/./src/forum/components/RecipientsModified.js","webpack://module.exports/./src/forum/index.js","webpack://module.exports/external \"flarum.core.compat['components/Modal']\"","webpack://module.exports/external \"flarum.core.compat['components/Search']\"","webpack://module.exports/external \"flarum.core.compat['helpers/avatar']\"","webpack://module.exports/external \"flarum.core.compat['utils/extractText']\"","webpack://module.exports/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://module.exports/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://module.exports/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://module.exports/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://module.exports/external \"flarum.core.compat['components/Badge']\"","webpack://module.exports/external \"flarum.core.compat['utils/UserControls']\"","webpack://module.exports/external \"flarum.core.compat['components/Page']\"","webpack://module.exports/external \"flarum.core.compat['helpers/icon']\"","webpack://module.exports/external \"flarum.core.compat['components/WelcomeHero']\"","webpack://module.exports/external \"flarum.core.compat['components/LogInModal']\"","webpack://module.exports/external \"flarum.core.compat['components/Select']\"","webpack://module.exports/external \"flarum.core.compat['components/LinkButton']\"","webpack://module.exports/external \"flarum.core.compat['components/SelectDropdown']\"","webpack://module.exports/external \"flarum.core.compat['components/EventPost']\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserSearchSource_UserSearchSource","search","query","app","store","find","filter","q","page","limit","view","toLowerCase","results","all","user","username","substr","length","className","translator","trans","map","username_default","children","highlight_default","data-index","id","avatar_default","GroupSearchSource_GroupSearchSource","group","namePlural","groupName","class","recipientLabel","recipient","attrs","style","label","link","extract_default","User_default","a","title","href","route","config","Group_default","RecipientSearch_RecipientSearch","isInitialized","_this","this","$search","$","on","e","target","addRecipient","data","focus","parentNode","_Search","_this2","loading","props","selected","toArray","onclick","removeRecipient","classList_default","open","focused","active","loadingSources","element","type","placeholder","extractText_default","oninput","withAttr","onfocus","hasFocus","onblur","in","sources","source","LoadingIndicator_default","component","size","sourceItems","items","ItemList_default","discussion","forum","attribute","canEditUserRecipients","add","canEditGroupRecipients","clear","redraw","values","split","findRecipient","remove","getById","Search_default","AddRecipientModal_AddRecipientModal","init","_Modal","prop","assignInitialRecipients","selectedRecipients","merge","session","recipientSearch","recipientUsers","recipientGroups","content","Button_default","disabled","icon","select","metaKey","ctrlKey","indexOf","index","submit","onsubmit","preventDefault","recipients","forEach","push","save","relationships","then","current","DiscussionPage_default","stream","update","modal","close","strategy","Modal_default","recipientCountLabel","count","transChoice","recipientsLabel","addRecipientsControl","external_flarum_core_compat_extend_","DiscussionControls_default","canEditRecipients","show","addHasRecipientsBadge","Discussion_default","badges","Badge_default","addDiscussPrivatelyControl","UserControls_default","deferred","DiscussionComposer_default","composer","load","resolve","promise","PrivateDiscussionList_PrivateDiscussionList","loadResults","offset","preloadedDiscussions","preloadedDocument","params","requestParams","include","join","DiscussionList_default","PrivateDiscussionIndex_PrivateDiscussionIndex","_Page","previous","lastDiscussion","PrivateDiscussionIndex","cache","privateDiscussionList","keys","some","history","icon_default","bodyClass","onunload","scrollTop","window","hero","listItems_default","sidebarItems","viewItems","actionItems","discussionList","render","context","apply","arguments","css","setTitle","setTitleCount","oldHeroHeight","heroHeight","outerHeight","height","scroll","setTimeout","$discussion","indexTop","indexBottom","discussionTop","top","discussionBottom","WelcomeHero_default","canStartDiscussion","itemClassName","newDiscussion","SelectDropdown_default","navItems","buttonClassName","stickyParams","LinkButton_default","sortMap","sortOptions","Select_default","options","sort","onchange","changeSort","refresh","markAllAsRead","searching","clearSearch","routeName","param","composeNewDiscussion","LogInModal_default","onlogin","confirm","readTime","Date","Page_default","RecipientsModified_RecipientsModified","initProps","diff","diff1","diff2","item","_EventPost","post","usersAdded","usersRemoved","groupsAdded","groupsRemoved","added","concat","removed","oldRecipients","newRecipients","descriptionKey","localeBase","descriptionData","initializers","routes","private_discussions","path","external_flarum_core_compat_Model_default","hasMany","oldRecipientUsers","oldRecipientGroups","postComponents","recipientsModified","chooseRecipients","users","groups","addRecipientComposer","addToDiscussion","long","DiscussionListItem_default","DiscussionHero_default","addRecipientLabels"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 38);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['models/Group'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/classList'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import highlight from 'flarum/helpers/highlight';\r\nimport avatar from 'flarum/helpers/avatar';\r\nimport username from 'flarum/helpers/username';\r\n\r\nexport default class UserSearchSource {\r\n    search(query) {\r\n        return app.store.find('users', {\r\n            filter: {q: query},\r\n            page: {limit: 5}\r\n        });\r\n    }\r\n  \r\n    view(query) {\r\n        query = query.toLowerCase();\r\n      \r\n        const results = app.store.all('users')\r\n            .filter(user => user.username().toLowerCase().substr(0, query.length) === query);\r\n\r\n        if (!results.length) return '';\r\n\r\n        return [\r\n            <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\r\n            results.map(user => {\r\n                const name = username(user);\r\n                name.children[0] = highlight(name.children[0], query);\r\n\r\n                return (\r\n                    <li className='SearchResult' data-index={'users:' + user.id()}>\r\n                        <a data-index={'users:' + user.id()}>\r\n                            {avatar(user)}\r\n                            {name}\r\n                        </a>\r\n                    </li>\r\n                );\r\n            })\r\n        ];\r\n    }\r\n}\r\n","import highlight from 'flarum/helpers/highlight';\r\n\r\nexport default class GroupSearchSource {\r\n    search(query) {\r\n        return app.store.find('groups', {\r\n            filter: {q: query},\r\n            page: {limit: 5}\r\n        });\r\n    }\r\n\r\n    view(query) {\r\n        query = query.toLowerCase();\r\n\r\n        const results = app.store.all('groups')\r\n            .filter(group => group.namePlural().toLowerCase().substr(0, query.length) === query);\r\n\r\n        if (!results.length) return '';\r\n\r\n        return [\r\n            <li className=\"Dropdown-header\">{app.translator.trans('flagrow-byobu.forum.search.headings.groups')}</li>,\r\n            results.map(group => {\r\n                const groupName = group.namePlural();\r\n                var name = highlight(groupName, query);\r\n\r\n                return (\r\n                    <li className=\"SearchResult\" data-index={'groups:' + group.id()}>\r\n                        <a data-index={'groups:' + group.id()}>\r\n                            <span class=\"groupName\">{name}</span>\r\n                        </a>\r\n                    </li>\r\n                );\r\n            })\r\n        ];\r\n    }\r\n}\r\n","import extract from 'flarum/utils/extract';\r\nimport username from 'flarum/helpers/username';\r\nimport User from 'flarum/models/User';\r\nimport Group from 'flarum/models/Group';\r\n\r\nexport default function recipientLabel(recipient, attrs = {}) {\r\n  attrs.style = attrs.style || {};\r\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\r\n\r\n  const link = extract(attrs, 'link');\r\n\r\n  var label;\r\n\r\n  if (recipient instanceof User) {\r\n      label = username(recipient);\r\n\r\n      if (link) {\r\n          attrs.title = recipient.username() || '';\r\n          attrs.href = app.route.user(recipient);\r\n          attrs.config = m.route;\r\n      }\r\n  } else if (recipient instanceof Group) {\r\n      label = recipient.namePlural();\r\n  } else {\r\n      attrs.className += ' none';\r\n      label = app.translator.trans('flagrow-byobu.forum.labels.user_deleted');\r\n  }\r\n\r\n  return (\r\n    m((link ? 'a' : 'span'), attrs,\r\n        <span className=\"RecipientLabel-text\">\r\n            {label}\r\n        </span>\r\n    )\r\n  );\r\n}\r\n","import Search from \"flarum/components/Search\";\r\nimport UserSearchSource from \"./sources/UserSearchSource\";\r\nimport GroupSearchSource from \"./sources/GroupSearchSource\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\nimport classList from \"flarum/utils/classList\";\r\nimport extractText from \"flarum/utils/extractText\";\r\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\r\nimport recipientLabel from \"../../common/helpers/recipientLabel\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\n\r\nexport default class RecipientSearch extends Search {\r\n\r\n    config(isInitialized) {\r\n        if (isInitialized) return;\r\n\r\n        const $search = this;\r\n\r\n        this.$('.Search-results').on('click', (e) => {\r\n            var target = this.$('.SearchResult.active')\r\n\r\n            $search.addRecipient(target.data('index'));\r\n            $search.$('.RecipientsInput').focus();\r\n        });\r\n\r\n        this.$('.Search-results').on('touchstart', (e) => {\r\n            var target = this.$(e.target.parentNode);\r\n\r\n            $search.addRecipient(target.data('index'));\r\n            $search.$('.RecipientsInput').focus();\r\n        });\r\n\r\n        super.config(isInitialized);\r\n    }\r\n\r\n    view() {\r\n        if (typeof this.value() === 'undefined') {\r\n            this.value('');\r\n        }\r\n\r\n        const loading = this.value() && this.value().length >= 3;\r\n\r\n        return m('div', {\r\n            className: 'AddRecipientModal-form-input'\r\n        }, [\r\n            m('div', {\r\n                className: 'RecipientsInput-selected RecipientsLabel'\r\n            }, this.props.selected().toArray().map(recipient =>\r\n                recipientLabel(recipient, {\r\n                    onclick: () => {\r\n                        this.removeRecipient(recipient);\r\n                    }\r\n                })\r\n            )),\r\n            m('input', {\r\n                className: 'RecipientsInput FormControl ' + classList({\r\n                    open: !!this.value(),\r\n                    focused: !!this.value(),\r\n                    active: !!this.value(),\r\n                    loading: !!this.loadingSources\r\n                }),\r\n                config: function (element) {\r\n                    element.focus();\r\n                },\r\n                type: 'search',\r\n                placeholder: extractText(app.translator.trans('flagrow-byobu.forum.input.search_recipients')),\r\n                value: this.value(),\r\n                oninput: m.withAttr('value', this.value),\r\n                onfocus: () => this.hasFocus = true,\r\n                onblur: () => this.hasFocus = false\r\n            }),\r\n            m('ul', {\r\n                className: 'Dropdown-menu Search-results fade ' + classList({\r\n                    in: !!loading\r\n                })\r\n            }, loading\r\n                ? this.sources.map(source => source.view(this.value()))\r\n                : LoadingIndicator.component({size: 'tiny', className: 'Button Button--icon Button--link'})\r\n            )\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Build an item list of SearchSources.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    sourceItems() {\r\n        const items = new ItemList();\r\n\r\n        // Add user source based on permissions.\r\n        if (\r\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithUsers')) ||\r\n            (this.props.discussion && this.props.discussion.canEditUserRecipients())\r\n        ) {\r\n            items.add('users', new UserSearchSource());\r\n        }\r\n\r\n        // Add group source based on permissions.\r\n        if (\r\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithGroups')) ||\r\n            (this.props.discussion && this.props.discussion.canEditGroupRecipients())\r\n        ) {\r\n            items.add('groups', new GroupSearchSource());\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n\r\n    /**\r\n     * Clear the search input and the current controller's active search.\r\n     */\r\n    clear() {\r\n        this.value('');\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    /**\r\n     * Adds a recipient.\r\n     *\r\n     * @param value\r\n     */\r\n    addRecipient(value) {\r\n\r\n        var values = value.split(':'),\r\n            type = values[0],\r\n            id = values[1];\r\n\r\n        var recipient = this.findRecipient(type, id);\r\n\r\n        this.props.selected().add(value, recipient);\r\n\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * Removes a recipient.\r\n     *\r\n     * @param recipient\r\n     */\r\n    removeRecipient(recipient) {\r\n        var type;\r\n\r\n        if (recipient instanceof User) {\r\n            type = 'users';\r\n        }\r\n        if (recipient instanceof Group) {\r\n            type = 'groups';\r\n        }\r\n\r\n        this.props.selected().remove(type + \":\" + recipient.id());\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    /**\r\n     * Loads a recipient from the global store.\r\n     *\r\n     * @param store\r\n     * @param id\r\n     * @returns {Model}\r\n     */\r\n    findRecipient(store, id) {\r\n        return app.store.getById(store, id);\r\n    }\r\n}\r\n","import Modal from \"flarum/components/Modal\";\r\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\r\nimport Button from \"flarum/components/Button\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\nimport RecipientSearch from \"./RecipientSearch\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\n\r\nexport default class AddRecipientModal extends Modal {\r\n    init() {\r\n        super.init();\r\n\r\n        this.selected = m.prop(new ItemList);\r\n\r\n        if (this.props.discussion) {\r\n            // Adds recipients of the currently viewed discussion.\r\n            this.assignInitialRecipients(this.props.discussion);\r\n        } else if (this.props.selectedRecipients.toArray().length > 0) {\r\n            // Adds previously selected recipients.\r\n            this.selected().merge(this.props.selectedRecipients);\r\n        } else {\r\n            // Adds the current user in case there are no selected recipients yet and this is a new discussion.\r\n            this.selected().add(\"users:\" + app.session.user.id(), app.session.user);\r\n        }\r\n\r\n        this.recipientSearch = RecipientSearch.component({\r\n            selected: this.selected,\r\n            discussion: this.props.discussion\r\n        });\r\n    }\r\n\r\n    assignInitialRecipients(discussion) {\r\n        discussion.recipientUsers().map(user => {\r\n            this.selected().add(\"users:\" + user.id(), user);\r\n        });\r\n        discussion.recipientGroups().map(group => {\r\n            this.selected().add(\"groups:\" + group.id(), group);\r\n        });\r\n    }\r\n\r\n    className() {\r\n        return 'AddRecipientModal';\r\n    }\r\n\r\n    title() {\r\n        return this.props.discussion\r\n            ? app.translator.trans('flagrow-byobu.forum.modal.titles.update_recipients', {title: <em>{this.props.discussion.title()}</em>})\r\n            : app.translator.trans('flagrow-byobu.forum.modal.titles.add_recipients');\r\n    }\r\n\r\n    content() {\r\n\r\n        return [\r\n            <div className=\"Modal-body\">\r\n                <div className=\"AddRecipientModal-form\">\r\n                    {this.recipientSearch}\r\n                    <div className=\"AddRecipientModal-form-submit App-primaryControl\">\r\n                        {Button.component({\r\n                            type: 'submit',\r\n                            className: 'Button Button--primary',\r\n                            disabled: false,\r\n                            icon: 'fas fa-check',\r\n                            children: app.translator.trans('flagrow-byobu.forum.buttons.submit')\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ];\r\n    }\r\n\r\n    select(e) {\r\n        // Ctrl + Enter submits the selection, just Enter completes the current entry\r\n        if (e.metaKey || e.ctrlKey || this.selected.indexOf(this.index) !== -1) {\r\n            if (this.selected().length) {\r\n                this.$('form').submit();\r\n            }\r\n        }\r\n    }\r\n\r\n    onsubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const discussion = this.props.discussion;\r\n        const recipients = this.selected();\r\n\r\n        var recipientGroups = [];\r\n        var recipientUsers = [];\r\n\r\n        recipients.toArray().forEach(recipient => {\r\n            if (recipient instanceof User) {\r\n                recipientUsers.push(recipient);\r\n            }\r\n            if (recipient instanceof Group) {\r\n                recipientGroups.push(recipient);\r\n            }\r\n        });\r\n\r\n        // Recipients are updated here for existing discussions here.\r\n        if (discussion) {\r\n            discussion.save({relationships: {recipientUsers, recipientGroups}})\r\n                .then(() => {\r\n                    if (app.current instanceof DiscussionPage) {\r\n                        app.current.stream.update();\r\n                    }\r\n                    m.redraw();\r\n                });\r\n        }\r\n\r\n        // Use the onsubmit callback to trigger an update in the DiscussionComposer\r\n        if (this.props.onsubmit) this.props.onsubmit(recipients);\r\n\r\n        app.modal.close();\r\n\r\n        m.redraw.strategy('none');\r\n    }\r\n}\r\n","export default function recipientCountLabel(count, attrs = {}) {\r\n  attrs.style = attrs.style || {};\r\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\r\n\r\n  var label = app.translator.transChoice('flagrow-byobu.forum.labels.recipients', count, {count});\r\n\r\n  return (\r\n    m('span', attrs,\r\n        <span className=\"RecipientLabel-text\">\r\n            {label}\r\n        </span>\r\n    )\r\n  );\r\n}\r\n","import {extend, override} from \"flarum/extend\";\r\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\r\nimport AddRecipientModal from \"./components/AddRecipientModal\";\r\nimport recipientCountLabel from \"../common/helpers/recipientCountLabel\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\n\r\nexport default function (app) {\r\n    // Add recipient-selection abilities to the discussion composer.\r\n    DiscussionComposer.prototype.recipients = new ItemList;\r\n    DiscussionComposer.prototype.recipientUsers = [];\r\n    DiscussionComposer.prototype.recipientGroups = [];\r\n\r\n    // Add a recipient selection modal when clicking the recipient tag label.\r\n    DiscussionComposer.prototype.chooseRecipients = function () {\r\n        app.modal.show(\r\n            new AddRecipientModal({\r\n                selectedRecipients: this.recipients,\r\n                onsubmit: (recipients) => {\r\n                    this.recipients = recipients;\r\n\r\n                    // Focus on recipient autocomplete field.\r\n                    this.$('.RecipientsInput').focus();\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    // Add a tag-selection menu to the discussion composer's header, after the\r\n    // title.\r\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\r\n        if (app.session.user && app.forum.attribute('canStartPrivateDiscussion')) {\r\n\r\n            const recipients = this.recipients.toArray();\r\n\r\n            items.add('recipients', (\r\n                <a className=\"DiscussionComposer-changeRecipients\"\r\n                   onclick={this.chooseRecipients.bind(this)}>\r\n                    {recipients.length\r\n                        ? recipientCountLabel(recipients.length)\r\n                        : <span className=\"RecipientLabel none\">{app.translator.trans('flagrow-byobu.forum.buttons.add_recipients')}</span>}\r\n                </a>\r\n            ), 5);\r\n        }\r\n    });\r\n\r\n    // Add the selected tags as data to submit to the server.\r\n    extend(DiscussionComposer.prototype, 'data', function (data) {\r\n        const users = [];\r\n        const groups = [];\r\n        this.recipients.toArray().forEach(recipient => {\r\n\r\n            if (recipient instanceof User) {\r\n                users.push(recipient);\r\n            }\r\n\r\n            if (recipient instanceof Group) {\r\n                groups.push(recipient);\r\n            }\r\n        });\r\n\r\n        data.relationships = data.relationships || {};\r\n\r\n        if (users.length) {\r\n            data.relationships.recipientUsers = users;\r\n        }\r\n\r\n        if (groups.length) {\r\n            data.relationships.recipientGroups = groups;\r\n        }\r\n    });\r\n}\r\n","import extract from 'flarum/utils/extract';\r\nimport recipientLabel from './recipientLabel';\r\n\r\nexport default function recipientsLabel(recipients, attrs = {}) {\r\n  const children = [];\r\n  const link = extract(attrs, 'link');\r\n\r\n  attrs.className = 'RecipientsLabel ' + (attrs.className || '');\r\n\r\n  if (recipients) {\r\n      recipients.forEach(recipient => {\r\n          children.push(recipientLabel(recipient, {link}));\r\n      });\r\n  } else {\r\n    children.push(recipientLabel());\r\n  }\r\n\r\n  return <span {...attrs}>{children}</span>;\r\n}\r\n","import {extend} from \"flarum/extend\";\r\nimport DiscussionListItem from \"flarum/components/DiscussionListItem\";\r\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\r\nimport DiscussionHero from \"flarum/components/DiscussionHero\";\r\nimport DiscussionList from \"flarum/components/DiscussionList\";\r\nimport recipientsLabel from \"../common/helpers/recipientsLabel\";\r\n\r\nexport default function() {\r\n\r\n    var addToDiscussion = function(discussion, items, long) {\r\n        var recipients = [];\r\n\r\n        if (discussion.recipientUsers().length) {\r\n            recipients = recipients.concat(discussion.recipientUsers());\r\n        }\r\n\r\n        if (discussion.recipientGroups().length) {\r\n            recipients = recipients.concat(discussion.recipientGroups());\r\n        }\r\n\r\n        if (recipients && recipients.length) {\r\n            if (long) {\r\n                items.add('recipients', recipientsLabel(recipients), 10);\r\n            } else {\r\n                items.add('recipients', recipientsLabel(recipients, {link: true}), 4);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds User labels on the discussion index page.\r\n     */\r\n    extend(DiscussionListItem.prototype, 'infoItems', function(items) {\r\n        const discussion = this.props.discussion;\r\n\r\n        addToDiscussion(discussion, items, true);\r\n    });\r\n\r\n    /**\r\n     * Require recipients from the API whenever we're loading a Discussion page.\r\n     */\r\n    extend(DiscussionPage.prototype, 'params', function(params) {\r\n        params.include.push('recipientUsers');\r\n        params.include.push('recipientGroups');\r\n    });\r\n    extend(DiscussionList.prototype, 'requestParams', function(params) {\r\n        params.include.push('recipientUsers');\r\n        params.include.push('recipientGroups');\r\n    });\r\n\r\n\r\n    /**\r\n     * Adds User labels on the discussion Hero.\r\n     */\r\n    extend(DiscussionHero.prototype, 'items', function(items) {\r\n        const discussion = this.props.discussion;\r\n\r\n        addToDiscussion(discussion, items, false);\r\n    });\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport Button from 'flarum/components/Button';\r\n\r\nimport AddRecipientModal from './components/AddRecipientModal';\r\n\r\nexport default function() {\r\n    // Add a control allowing the discussion to be moved to another category.\r\n    extend(DiscussionControls, 'moderationControls', function(items, discussion) {\r\n        if (discussion.canEditRecipients()) {\r\n            items.add('recipients', Button.component({\r\n                children: app.translator.trans('flagrow-byobu.forum.buttons.edit_recipients'),\r\n                icon: 'far fa-map',\r\n                onclick: () => app.modal.show(new AddRecipientModal({discussion}))\r\n            }));\r\n        }\r\n    });\r\n}\r\n","import {extend} from \"flarum/extend\";\r\nimport Discussion from \"flarum/models/Discussion\";\r\nimport Badge from \"flarum/components/Badge\";\r\n\r\nexport default function addHasRecipientsBadge() {\r\n    extend(Discussion.prototype, 'badges', function (badges) {\r\n        if (this.recipientUsers().length || this.recipientGroups().length) {\r\n            badges.add('private', Badge.component({\r\n                type: 'private',\r\n                label: app.translator.trans('flagrow-byobu.forum.badges.is_private.tooltip'),\r\n                icon: 'fas fa-map'\r\n            }), 10);\r\n        }\r\n    });\r\n}\r\n","import {extend} from 'flarum/extend';\r\nimport UserControls from 'flarum/utils/UserControls';\r\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\r\nimport Button from 'flarum/components/Button';\r\nimport ItemList from 'flarum/utils/ItemList';\r\n\r\nexport default function () {\r\n    // Add a control allowing the discussion to be moved to another category.\r\n    extend(UserControls, 'userControls', function (items, user) {\r\n        if (app.session.user &&\r\n                app.session.user.id() != user.id() &&\r\n                app.forum.attribute('canStartPrivateDiscussion')\r\n        ) {\r\n            items.add('private-discussion', Button.component({\r\n                children: app.translator.trans('flagrow-byobu.forum.buttons.send_pd', {username: user.username()}),\r\n                icon: 'far fa-map',\r\n                onclick: () => {\r\n                    const deferred = m.deferred();\r\n\r\n                    let recipients = new ItemList();\r\n                    recipients.add('users:' + user.id(), user);\r\n                    recipients.add('users:' + app.session.user.id(), app.session.user);\r\n\r\n                    DiscussionComposer.prototype.recipients = recipients;\r\n\r\n                    const component = new DiscussionComposer({\r\n                        user: app.session.user,\r\n                        recipients: recipients,\r\n                        recipientUsers: recipients\r\n                    });\r\n\r\n                    app.composer.load(component);\r\n                    app.composer.show();\r\n\r\n                    deferred.resolve(component);\r\n\r\n                    return deferred.promise;\r\n                }\r\n            }));\r\n        }\r\n\r\n        return items;\r\n    });\r\n}\r\n","import DiscussionList from 'flarum/components/DiscussionList';\r\n\r\nexport default class PrivateDiscussionList extends DiscussionList\r\n{\r\n    /**\r\n     * Load a new page of discussion results.\r\n     *\r\n     * @param {Integer} offset The index to start the page at.\r\n     * @return {Promise}\r\n     */\r\n    loadResults(offset) {\r\n        const preloadedDiscussions = app.preloadedDocument();\r\n\r\n        if (preloadedDiscussions) {\r\n            return m.deferred().resolve(preloadedDiscussions).promise;\r\n        }\r\n\r\n        const params = this.requestParams();\r\n        params.q = 'q=is:private';\r\n        params.page = {offset};\r\n        params.include = params.include.join(',');\r\n\r\n        return app.store.find('discussions', params);\r\n    }\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport Page from 'flarum/components/Page';\r\nimport ItemList from 'flarum/utils/ItemList';\r\nimport listItems from 'flarum/helpers/listItems';\r\nimport icon from 'flarum/helpers/icon';\r\nimport PrivateDiscussionList from './PrivateDiscussionList';\r\nimport WelcomeHero from 'flarum/components/WelcomeHero';\r\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\r\nimport LogInModal from 'flarum/components/LogInModal';\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\nimport Select from 'flarum/components/Select';\r\nimport Button from 'flarum/components/Button';\r\nimport LinkButton from 'flarum/components/LinkButton';\r\nimport SelectDropdown from 'flarum/components/SelectDropdown';\r\n\r\nexport default class PrivateDiscussionIndex extends Page\r\n{\r\n    init() {\r\n        super.init();\r\n\r\n        // If the user is returning from a discussion page, then take note of which\r\n        // discussion they have just visited. After the view is rendered, we will\r\n        // scroll down so that this discussion is in view.\r\n        if (app.previous instanceof DiscussionPage) {\r\n            this.lastDiscussion = app.previous.discussion;\r\n        }\r\n\r\n        // If the user is coming from the discussion list, then they have either\r\n        // just switched one of the parameters (filter, sort, search) or they\r\n        // probably want to refresh the results. We will clear the discussion list\r\n        // cache so that results are reloaded.\r\n        if (app.previous instanceof PrivateDiscussionIndex) {\r\n            app.cache.privateDiscussionList = null;\r\n        }\r\n\r\n        const params = this.params();\r\n\r\n        if (app.cache.privateDiscussionList) {\r\n            // Compare the requested parameters (sort, search query) to the ones that\r\n            // are currently present in the cached discussion list. If they differ, we\r\n            // will clear the cache and set up a new discussion list component with\r\n            // the new parameters.\r\n            Object.keys(params).some(key => {\r\n                if (app.cache.privateDiscussionList.props.params[key] !== params[key]) {\r\n                    app.cache.privateDiscussionList = null;\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!app.cache.privateDiscussionList) {\r\n            app.cache.privateDiscussionList = new PrivateDiscussionList({params});\r\n        }\r\n\r\n        app.history.push('private-index', icon('far fa-map'));\r\n\r\n        this.bodyClass = 'App--index';\r\n    }\r\n\r\n    onunload() {\r\n        // Save the scroll position so we can restore it when we return to the\r\n        // discussion list.\r\n        app.cache.scrollTop = $(window).scrollTop();\r\n    }\r\n\r\n    view() {\r\n        return (\r\n            <div className=\"IndexPage\">\r\n                {this.hero()}\r\n                <div className=\"container\">\r\n                    <nav className=\"IndexPage-nav sideNav\">\r\n                        <ul>{listItems(this.sidebarItems().toArray())}</ul>\r\n                    </nav>\r\n                    <div className=\"IndexPage-results sideNavOffset\">\r\n                        <div className=\"IndexPage-toolbar\">\r\n                            <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\r\n                            <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\r\n                        </div>\r\n                        {app.cache.discussionList.render()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    config(isInitialized, context) {\r\n        super.config(...arguments);\r\n\r\n        if (isInitialized) return;\r\n\r\n        extend(context, 'onunload', () => $('#app').css('min-height', ''));\r\n\r\n        app.setTitle('');\r\n        app.setTitleCount(0);\r\n\r\n        // Work out the difference between the height of this hero and that of the\r\n        // previous hero. Maintain the same scroll position relative to the bottom\r\n        // of the hero so that the sidebar doesn't jump around.\r\n        const oldHeroHeight = app.cache.heroHeight;\r\n        const heroHeight = app.cache.heroHeight = this.$('.Hero').outerHeight();\r\n        const scrollTop = app.cache.scrollTop;\r\n\r\n        $('#app').css('min-height', $(window).height() + heroHeight);\r\n\r\n        // Scroll to the remembered position. We do this after a short delay so that\r\n        // it happens after the browser has done its own \"back button\" scrolling,\r\n        // which isn't right. https://github.com/flarum/core/issues/835\r\n        const scroll = () => $(window).scrollTop(scrollTop - oldHeroHeight + heroHeight);\r\n        scroll();\r\n        setTimeout(scroll, 1);\r\n\r\n        // If we've just returned from a discussion page, then the constructor will\r\n        // have set the `lastDiscussion` property. If this is the case, we want to\r\n        // scroll down to that discussion so that it's in view.\r\n        if (this.lastDiscussion) {\r\n            const $discussion = this.$(`.DiscussionListItem[data-id=\"${this.lastDiscussion.id()}\"]`);\r\n\r\n            if ($discussion.length) {\r\n                const indexTop = $('#header').outerHeight();\r\n                const indexBottom = $(window).height();\r\n                const discussionTop = $discussion.offset().top;\r\n                const discussionBottom = discussionTop + $discussion.outerHeight();\r\n\r\n                if (discussionTop < scrollTop + indexTop || discussionBottom > scrollTop + indexBottom) {\r\n                    $(window).scrollTop(discussionTop - indexTop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the component to display as the hero.\r\n     *\r\n     * @return {MithrilComponent}\r\n     */\r\n    hero() {\r\n        return WelcomeHero.component();\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the sidebar of the index page. By default this is a\r\n     * \"New Discussion\" button, and then a DropdownSelect component containing a\r\n     * list of navigation items.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    sidebarItems() {\r\n        const items = new ItemList();\r\n        const canStartDiscussion = app.forum.attribute('canStartDiscussion') || !app.session.user;\r\n\r\n        items.add('newDiscussion',\r\n            Button.component({\r\n                children: app.translator.trans(canStartDiscussion ? 'core.forum.index.start_discussion_button' : 'core.forum.index.cannot_start_discussion_button'),\r\n                icon: 'fas fa-edit',\r\n                className: 'Button Button--primary IndexPage-newDiscussion',\r\n                itemClassName: 'App-primaryControl',\r\n                onclick: this.newDiscussion.bind(this),\r\n                disabled: !canStartDiscussion\r\n            })\r\n        );\r\n\r\n        items.add('nav',\r\n            SelectDropdown.component({\r\n                children: this.navItems(this).toArray(),\r\n                buttonClassName: 'Button',\r\n                className: 'App-titleControl'\r\n            })\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the navigation in the sidebar of the index page. By\r\n     * default this is just the 'All Discussions' link.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    navItems() {\r\n        const items = new ItemList();\r\n        const params = this.stickyParams();\r\n\r\n        items.add('allDiscussions',\r\n            LinkButton.component({\r\n                href: app.route('index', params),\r\n                children: app.translator.trans('core.forum.index.all_discussions_link'),\r\n                icon: 'far fa-comments'\r\n            }),\r\n            100\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the part of the toolbar which is concerned with how\r\n     * the results are displayed. By default this is just a select box to change\r\n     * the way discussions are sorted.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    viewItems() {\r\n        const items = new ItemList();\r\n        const sortMap = app.cache.discussionList.sortMap();\r\n\r\n        const sortOptions = {};\r\n        for (const i in sortMap) {\r\n            sortOptions[i] = app.translator.trans('core.forum.index_sort.' + i + '_button');\r\n        }\r\n\r\n        items.add('sort',\r\n            Select.component({\r\n                options: sortOptions,\r\n                value: this.params().sort || Object.keys(sortMap)[0],\r\n                onchange: this.changeSort.bind(this)\r\n            })\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the part of the toolbar which is about taking action\r\n     * on the results. By default this is just a \"mark all as read\" button.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    actionItems() {\r\n        const items = new ItemList();\r\n\r\n        items.add('refresh',\r\n            Button.component({\r\n                title: app.translator.trans('core.forum.index.refresh_tooltip'),\r\n                icon: 'fas fa-refresh',\r\n                className: 'Button Button--icon',\r\n                onclick: () => app.cache.discussionList.refresh()\r\n            })\r\n        );\r\n\r\n        if (app.session.user) {\r\n            items.add('markAllAsRead',\r\n                Button.component({\r\n                    title: app.translator.trans('core.forum.index.mark_all_as_read_tooltip'),\r\n                    icon: 'fas fa-check',\r\n                    className: 'Button Button--icon',\r\n                    onclick: this.markAllAsRead.bind(this)\r\n                })\r\n            );\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Return the current search query, if any. This is implemented to activate\r\n     * the search box in the header.\r\n     *\r\n     * @see Search\r\n     * @return {String}\r\n     */\r\n    searching() {\r\n        return this.params().q;\r\n    }\r\n\r\n    /**\r\n     * Redirect to the index page without a search filter. This is called when the\r\n     * 'x' is clicked in the search box in the header.\r\n     *\r\n     * @see Search\r\n     */\r\n    clearSearch() {\r\n        const params = this.params();\r\n        delete params.q;\r\n\r\n        m.route(app.route(this.props.routeName, params));\r\n    }\r\n\r\n    /**\r\n     * Redirect to the index page using the given sort parameter.\r\n     *\r\n     * @param {String} sort\r\n     */\r\n    changeSort(sort) {\r\n        const params = this.params();\r\n\r\n        if (sort === Object.keys(app.cache.discussionList.sortMap())[0]) {\r\n            delete params.sort;\r\n        } else {\r\n            params.sort = sort;\r\n        }\r\n\r\n        m.route(app.route(this.props.routeName, params));\r\n    }\r\n\r\n    /**\r\n     * Get URL parameters that stick between filter changes.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    stickyParams() {\r\n        return {\r\n            sort: m.route.param('sort'),\r\n            q: m.route.param('q')\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get parameters to pass to the DiscussionList component.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    params() {\r\n        const params = this.stickyParams();\r\n\r\n        params.filter = m.route.param('filter');\r\n\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * Log the user in and then open the composer for a new discussion.\r\n     *\r\n     * @return {Promise}\r\n     */\r\n    newDiscussion() {\r\n        const deferred = m.deferred();\r\n\r\n        if (app.session.user) {\r\n            this.composeNewDiscussion(deferred);\r\n        } else {\r\n            app.modal.show(\r\n                new LogInModal({\r\n                    onlogin: this.composeNewDiscussion.bind(this, deferred)\r\n                })\r\n            );\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Initialize the composer for a new discussion.\r\n     *\r\n     * @param {Deferred} deferred\r\n     * @return {Promise}\r\n     */\r\n    composeNewDiscussion(deferred) {\r\n        const component = new DiscussionComposer({user: app.session.user});\r\n\r\n        app.composer.load(component);\r\n        app.composer.show();\r\n\r\n        deferred.resolve(component);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Mark all discussions as read.\r\n     *\r\n     * @return void\r\n     */\r\n    markAllAsRead() {\r\n        const confirmation = confirm(app.translator.trans('core.forum.index.mark_all_as_read_confirmation'));\r\n\r\n        if (confirmation) {\r\n            app.session.user.save({readTime: new Date()});\r\n        }\r\n    }\r\n}\r\n","import EventPost from \"flarum/components/EventPost\";\r\nimport recipientsLabel from \"../../common/helpers/recipientsLabel\";\r\n\r\nexport default class RecipientsModified extends EventPost {\r\n    static initProps(props) {\r\n        super.initProps(props);\r\n\r\n        function diff(diff1, diff2, store) {\r\n            return diff1\r\n                .filter(item => diff2.indexOf(item) === -1)\r\n                .map(id => app.store.getById(store, id));\r\n        }\r\n\r\n        const content = props.post.content();\r\n\r\n        // For event posts existing before groups functionality.\r\n        if (!content['new'] && content.length == 2) {\r\n            const oldRecipients = props.post.content()[0];\r\n            const newRecipients = props.post.content()[1];\r\n            props.added = diff(newRecipients, oldRecipients, 'users');\r\n            props.removed = diff(oldRecipients, newRecipients, 'users');\r\n        } else {\r\n            var usersAdded = diff(content['new']['users'], content['old']['users'], 'users');\r\n            var usersRemoved = diff(content['old']['users'], content['new']['users'], 'users');\r\n            var groupsAdded = diff(content['new']['groups'], content['old']['groups'], 'groups');\r\n            var groupsRemoved = diff(content['old']['groups'], content['new']['groups'], 'groups');\r\n\r\n            props.added = usersAdded.concat(groupsAdded);\r\n            props.removed = usersRemoved.concat(groupsRemoved);\r\n        }\r\n    }\r\n\r\n    icon() {\r\n        return 'far fa-map';\r\n    }\r\n\r\n    descriptionKey() {\r\n\r\n        var localeBase = 'flagrow-byobu.forum.post.recipients_modified.';\r\n\r\n        if (this.props.added.length) {\r\n            if (this.props.removed.length) {\r\n                return localeBase + 'added_and_removed';\r\n            }\r\n\r\n            return localeBase + 'added';\r\n        }\r\n\r\n        return localeBase + 'removed';\r\n    }\r\n\r\n    descriptionData() {\r\n        const data = {};\r\n\r\n        if (this.props.added.length) {\r\n            data.added = recipientsLabel(this.props.added, {link: true});\r\n        }\r\n\r\n        if (this.props.removed.length) {\r\n            data.removed = recipientsLabel(this.props.removed, {link: true});\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n","import Model from \"flarum/Model\";\r\nimport Discussion from \"flarum/models/Discussion\";\r\nimport addRecipientComposer from \"./addRecipientComposer\";\r\nimport addRecipientLabels from \"./addRecipientLabels\";\r\nimport addRecipientsControl from \"./addRecipientsControl\";\r\nimport addHasRecipientsBadge from \"./addHasRecipientsBadge\";\r\nimport addDiscussPrivatelyControl from './addDiscussPrivatelyControl';\r\n\r\nimport PrivateDiscussionIndex from \"./components/PrivateDiscussionIndex\";\r\nimport RecipientsModified from \"./components/RecipientsModified\";\r\n\r\napp.initializers.add('flagrow-byobu', function(app) {\r\n    app.routes.private_discussions = {path: '/private-discussions', component: PrivateDiscussionIndex.component()};\r\n\r\n    Discussion.prototype.recipientUsers = Model.hasMany('recipientUsers');\r\n    Discussion.prototype.oldRecipientUsers = Model.hasMany('oldRecipientUsers');\r\n    Discussion.prototype.recipientGroups = Model.hasMany('recipientGroups');\r\n    Discussion.prototype.oldRecipientGroups = Model.hasMany('oldRecipientGroups');\r\n\r\n    Discussion.prototype.canEditRecipients = Model.attribute('canEditRecipients');\r\n    Discussion.prototype.canEditUserRecipients = Model.attribute('canEditUserRecipients');\r\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\r\n\r\n    app.postComponents.recipientsModified = RecipientsModified;\r\n\r\n    addRecipientComposer(app);\r\n    addRecipientLabels();\r\n    addRecipientsControl();\r\n    addHasRecipientsBadge();\r\n\r\n    addDiscussPrivatelyControl();\r\n});\r\n","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Search'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/WelcomeHero'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/SelectDropdown'];","module.exports = flarum.core.compat['components/EventPost'];"],"sourceRoot":""}