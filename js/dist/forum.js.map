{"version":3,"sources":["webpack://@fof/byobu/webpack/bootstrap","webpack://@fof/byobu/external \"flarum.core.compat['extend']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/User']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Discussion']\"","webpack://@fof/byobu/external \"flarum.core.compat['Model']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Button']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Group']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Select']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/highlight']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/username']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extract']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/UserPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/listItems']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/classList']\"","webpack://@fof/byobu/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/byobu/./src/forum/components/sources/UserSearchSource.js","webpack://@fof/byobu/./src/forum/components/sources/GroupSearchSource.js","webpack://@fof/byobu/./src/common/helpers/recipientLabel.js","webpack://@fof/byobu/./src/forum/components/RecipientSearch.js","webpack://@fof/byobu/./src/forum/components/AddRecipientModal.js","webpack://@fof/byobu/./src/common/helpers/recipientCountLabel.js","webpack://@fof/byobu/./src/forum/addRecipientComposer.js","webpack://@fof/byobu/./src/common/helpers/recipientsLabel.js","webpack://@fof/byobu/./src/forum/addRecipientLabels.js","webpack://@fof/byobu/./src/forum/addRecipientsControl.js","webpack://@fof/byobu/./src/forum/addHasRecipientsBadge.js","webpack://@fof/byobu/./src/forum/addDiscussPrivatelyControl.js","webpack://@fof/byobu/./src/forum/addPrivacySetting.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionList.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionsUserPage.js","webpack://@fof/byobu/./src/forum/addPrivateDiscussionsPage.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionIndex.js","webpack://@fof/byobu/./src/forum/components/RecipientsModified.js","webpack://@fof/byobu/./src/forum/index.js","webpack://@fof/byobu/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Search']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/avatar']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Badge']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/UserControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Page']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/WelcomeHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LogInModal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SelectDropdown']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/EventPost']\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserSearchSource_UserSearchSource","view","query","_this","this","length","loading","app","cache","byobuResults","className","translator","trans","map","user","username_default","children","highlight_default","data-index","id","avatar_default","store","find","filter","q","page","limit","then","pushResults","results","_this2","payload","data","result","getById","push","redraw","GroupSearchSource_GroupSearchSource","search","toLowerCase","all","group","namePlural","substr","groupName","class","recipientLabel","recipient","attrs","style","label","link","extract_default","User_default","a","title","username","href","route","config","Group_default","RecipientSearch_RecipientSearch","isInitialized","$search","$","on","e","target","addRecipient","focus","parentNode","_Search","sources","sourceItems","toArray","props","selected","onclick","removeRecipient","classList_default","open","focused","active","loadingSources","element","type","placeholder","extractText_default","oninput","withAttr","onfocus","hasFocus","onblur","in","LoadingIndicator_default","component","size","source","items","ItemList_default","discussion","forum","attribute","canEditUserRecipients","add","canEditGroupRecipients","clear","values","split","findRecipient","remove","Search_default","AddRecipientModal_AddRecipientModal","init","_Modal","prop","assignInitialRecipients","selectedRecipients","merge","session","recipientSearch","recipientUsers","recipientGroups","content","Button_default","disabled","icon","select","metaKey","ctrlKey","indexOf","index","submit","onsubmit","preventDefault","recipients","forEach","save","relationships","current","DiscussionPage_default","stream","update","modal","close","strategy","Modal_default","recipientCountLabel","count","transChoice","recipientsLabel","addRecipientsControl","external_flarum_core_compat_extend_","DiscussionControls_default","canEditRecipients","show","addHasRecipientsBadge","Discussion_default","badges","Badge_default","addDiscussPrivatelyControl","UserControls_default","blocksPd","cannotBeDirectMessaged","deferred","DiscussionComposer_default","composer","load","resolve","promise","addPrivacySetting","SettingsPage_default","Switch_default","state","preferences","onchange","preferenceSaver","PrivateDiscussionList_PrivateDiscussionList","DiscussionList_default","PrivateDiscussionsUserPage_PrivateDiscussionsUserPage","_UserPage","loadUser","param","list","params","sort","refresh","render","UserPage_default","addPrivateDiscussionsPage","Number","routes","path","LinkButton_default","PrivateDiscussionIndex_PrivateDiscussionIndex","_Page","previous","lastDiscussion","PrivateDiscussionIndex","privateDiscussionList","keys","some","history","icon_default","bodyClass","onunload","scrollTop","window","hero","listItems_default","sidebarItems","viewItems","actionItems","discussionList","context","apply","arguments","css","setTitle","setTitleCount","oldHeroHeight","heroHeight","outerHeight","height","scroll","setTimeout","$discussion","indexTop","indexBottom","discussionTop","offset","top","discussionBottom","WelcomeHero_default","canStartDiscussion","itemClassName","newDiscussion","SelectDropdown_default","navItems","buttonClassName","stickyParams","sortMap","sortOptions","Select_default","options","changeSort","markAllAsRead","searching","clearSearch","routeName","composeNewDiscussion","LogInModal_default","onlogin","confirm","readTime","Date","Page_default","RecipientsModified_RecipientsModified","initProps","diff","diff1","diff2","item","_EventPost","post","usersAdded","usersRemoved","groupsAdded","groupsRemoved","added","concat","removed","oldRecipients","newRecipients","descriptionKey","localeBase","descriptionData","initializers","private_discussions","external_flarum_core_compat_Model_default","hasMany","oldRecipientUsers","oldRecipientGroups","postComponents","recipientsModified","chooseRecipients","users","groups","addRecipientComposer","addToDiscussion","long","DiscussionListItem_default","include","DiscussionHero_default","addRecipientLabels"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['models/Group'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/classList'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import highlight from 'flarum/helpers/highlight';\nimport avatar from 'flarum/helpers/avatar';\nimport username from 'flarum/helpers/username';\n\nexport default class UserSearchSource {\n    view(query) {\n        if (query.length < 3 || this.loading) return;\n\n        if (!app.cache.byobuResults) {\n            app.cache.byobuResults = [];\n        }\n\n        this.query = query;\n\n        if (!app.cache.byobuResults[this.query]) {\n\n            this.loading = true;\n\n            app.cache.byobuResults[this.query] = [];\n            app.store.find('users', {\n                filter: {q: this.query + ' allows-pd'},\n                page: {limit: 5}\n            }).then(this.pushResults.bind(this));\n        } else\n\n            return [\n                <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\n                app.cache.byobuResults[this.query].map(user => {\n                    const name = username(user);\n                    name.children[0] = highlight(name.children[0], this.query);\n\n                    return (\n                        <li className='SearchResult' data-index={'users:' + user.id()}>\n                            <a data-index={'users:' + user.id()}>\n                                {avatar(user)}\n                                {name}\n                            </a>\n                        </li>\n                    );\n                })\n            ];\n    }\n\n    pushResults(results) {\n        results.payload.data.map(result => {\n            var user = app.store.getById('users', result.id);\n            app.cache.byobuResults[this.query].push(user);\n        });\n        this.loading = false;\n        m.redraw();\n    }\n}\n","import highlight from 'flarum/helpers/highlight';\n\nexport default class GroupSearchSource {\n    search(query) {\n        return app.store.find('groups', {\n            filter: {q: query},\n            page: {limit: 5}\n        });\n    }\n\n    view(query) {\n        query = query.toLowerCase();\n\n        const results = app.store.all('groups')\n            .filter(group => group.namePlural().toLowerCase().substr(0, query.length) === query);\n\n        if (!results.length) return '';\n\n        return [\n            <li className=\"Dropdown-header\">{app.translator.trans('fof-byobu.forum.search.headings.groups')}</li>,\n            results.map(group => {\n                const groupName = group.namePlural();\n                var name = highlight(groupName, query);\n\n                return (\n                    <li className=\"SearchResult\" data-index={'groups:' + group.id()}>\n                        <a data-index={'groups:' + group.id()}>\n                            <span class=\"groupName\">{name}</span>\n                        </a>\n                    </li>\n                );\n            })\n        ];\n    }\n}\n","import extract from 'flarum/utils/extract';\nimport username from 'flarum/helpers/username';\nimport User from 'flarum/models/User';\nimport Group from 'flarum/models/Group';\n\nexport default function recipientLabel(recipient, attrs = {}) {\n  attrs.style = attrs.style || {};\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\n\n  const link = extract(attrs, 'link');\n\n  var label;\n\n  if (recipient instanceof User) {\n      label = username(recipient);\n\n      if (link) {\n          attrs.title = recipient.username() || '';\n          attrs.href = app.route.user(recipient);\n          attrs.config = m.route;\n      }\n  } else if (recipient instanceof Group) {\n      label = recipient.namePlural();\n  } else {\n      attrs.className += ' none';\n      label = app.translator.trans('fof-byobu.forum.labels.user_deleted');\n  }\n\n  return (\n    m((link ? 'a' : 'span'), attrs,\n        <span className=\"RecipientLabel-text\">\n            {label}\n        </span>\n    )\n  );\n}\n","import Search from \"flarum/components/Search\";\nimport UserSearchSource from \"./sources/UserSearchSource\";\nimport GroupSearchSource from \"./sources/GroupSearchSource\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport classList from \"flarum/utils/classList\";\nimport extractText from \"flarum/utils/extractText\";\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\nimport recipientLabel from \"../../common/helpers/recipientLabel\";\nimport User from \"flarum/models/User\";\nimport Group from \"flarum/models/Group\";\n\nexport default class RecipientSearch extends Search {\n\n    config(isInitialized) {\n        if (isInitialized) return;\n\n        const $search = this;\n\n        this.$('.Search-results').on('click', (e) => {\n            const target = this.$('.SearchResult.active')\n\n            $search.addRecipient(target.data('index'));\n            $search.$('.RecipientsInput').focus();\n        });\n\n        this.$('.Search-results').on('touchstart', (e) => {\n            const target = this.$(e.target.parentNode);\n\n            $search.addRecipient(target.data('index'));\n            $search.$('.RecipientsInput').focus();\n        });\n\n        super.config(isInitialized);\n    }\n\n    view() {\n        if (typeof this.value() === 'undefined') {\n            this.value('');\n        }\n\n        const loading = this.value() && this.value().length >= 3;\n\n        if (!this.sources) {\n            this.sources = this.sourceItems().toArray();\n        }\n\n        return m('div', {\n            className: 'AddRecipientModal-form-input'\n        }, [\n            m('div', {\n                className: 'RecipientsInput-selected RecipientsLabel'\n            }, this.props.selected().toArray().map(recipient =>\n                recipientLabel(recipient, {\n                    onclick: () => {\n                        this.removeRecipient(recipient);\n                    }\n                })\n            )),\n            m('input', {\n                className: 'RecipientsInput FormControl ' + classList({\n                    open: !!this.value(),\n                    focused: !!this.value(),\n                    active: !!this.value(),\n                    loading: !!this.loadingSources\n                }),\n                config: function (element) {\n                    element.focus();\n                },\n                type: 'search',\n                placeholder: extractText(app.translator.trans('fof-byobu.forum.input.search_recipients')),\n                value: this.value(),\n                oninput: m.withAttr('value', this.value),\n                onfocus: () => this.hasFocus = true,\n                onblur: () => this.hasFocus = false\n            }),\n            m('ul', {\n                className: 'Dropdown-menu Search-results fade ' + classList({\n                    in: !!loading\n                })\n            }, this.loadingSources\n                ? LoadingIndicator.component({size: 'tiny', className: 'Button Button--icon Button--link'})\n                : this.sources.map(source => source.view(this.value()))\n            )\n        ]);\n    }\n\n    /**\n     * Build an item list of SearchSources.\n     *\n     * @return {ItemList}\n     */\n    sourceItems() {\n        const items = new ItemList();\n\n        // Add user source based on permissions.\n        if (\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithUsers')) ||\n            (this.props.discussion && this.props.discussion.canEditUserRecipients())\n        ) {\n            items.add('users', new UserSearchSource());\n        }\n\n        // Add group source based on permissions.\n        if (\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithGroups')) ||\n            (this.props.discussion && this.props.discussion.canEditGroupRecipients())\n        ) {\n            items.add('groups', new GroupSearchSource());\n        }\n\n        return items;\n    }\n\n\n    /**\n     * Clear the search input and the current controller's active search.\n     */\n    clear() {\n        this.value('');\n\n        m.redraw();\n    }\n\n    /**\n     * Adds a recipient.\n     *\n     * @param value\n     */\n    addRecipient(value) {\n\n        let values = value.split(':'),\n            type = values[0],\n            id = values[1];\n\n        let recipient = this.findRecipient(type, id);\n\n        this.props.selected().add(value, recipient);\n\n        this.clear();\n    }\n\n    /**\n     * Removes a recipient.\n     *\n     * @param recipient\n     */\n    removeRecipient(recipient) {\n        let type;\n\n        if (recipient instanceof User) {\n            type = 'users';\n        }\n        if (recipient instanceof Group) {\n            type = 'groups';\n        }\n\n        this.props.selected().remove(type + \":\" + recipient.id());\n\n        m.redraw();\n    }\n\n    /**\n     * Loads a recipient from the global store.\n     *\n     * @param store\n     * @param id\n     * @returns {Model}\n     */\n    findRecipient(store, id) {\n        return app.store.getById(store, id);\n    }\n}\n","import Modal from \"flarum/components/Modal\";\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\nimport Button from \"flarum/components/Button\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport RecipientSearch from \"./RecipientSearch\";\nimport User from \"flarum/models/User\";\nimport Group from \"flarum/models/Group\";\n\nexport default class AddRecipientModal extends Modal {\n    init() {\n        super.init();\n\n        this.selected = m.prop(new ItemList);\n\n        if (this.props.discussion) {\n            // Adds recipients of the currently viewed discussion.\n            this.assignInitialRecipients(this.props.discussion);\n        } else if (this.props.selectedRecipients.toArray().length > 0) {\n            // Adds previously selected recipients.\n            this.selected().merge(this.props.selectedRecipients);\n        } else {\n            // Adds the current user in case there are no selected recipients yet and this is a new discussion.\n            this.selected().add(\"users:\" + app.session.user.id(), app.session.user);\n        }\n\n        this.recipientSearch = RecipientSearch.component({\n            selected: this.selected,\n            discussion: this.props.discussion\n        });\n    }\n\n    assignInitialRecipients(discussion) {\n        discussion.recipientUsers().map(user => {\n            this.selected().add(\"users:\" + user.id(), user);\n        });\n        discussion.recipientGroups().map(group => {\n            this.selected().add(\"groups:\" + group.id(), group);\n        });\n    }\n\n    className() {\n        return 'AddRecipientModal';\n    }\n\n    title() {\n        return this.props.discussion\n            ? app.translator.trans('fof-byobu.forum.modal.titles.update_recipients', {title: <em>{this.props.discussion.title()}</em>})\n            : app.translator.trans('fof-byobu.forum.modal.titles.add_recipients');\n    }\n\n    content() {\n\n        return [\n            <div className=\"Modal-body\">\n                <div className=\"AddRecipientModal-form\">\n                    {this.recipientSearch}\n                    <div className=\"AddRecipientModal-form-submit App-primaryControl\">\n                        {Button.component({\n                            type: 'submit',\n                            className: 'Button Button--primary',\n                            disabled: false,\n                            icon: 'fas fa-check',\n                            children: app.translator.trans('fof-byobu.forum.buttons.submit')\n                        })}\n                    </div>\n                </div>\n            </div>\n        ];\n    }\n\n    select(e) {\n        // Ctrl + Enter submits the selection, just Enter completes the current entry\n        if (e.metaKey || e.ctrlKey || this.selected.indexOf(this.index) !== -1) {\n            if (this.selected().length) {\n                this.$('form').submit();\n            }\n        }\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        const discussion = this.props.discussion;\n        const recipients = this.selected();\n\n        let recipientGroups = [];\n        let recipientUsers = [];\n\n        recipients.toArray().forEach(recipient => {\n            if (recipient instanceof User) {\n                recipientUsers.push(recipient);\n            }\n            if (recipient instanceof Group) {\n                recipientGroups.push(recipient);\n            }\n        });\n\n        // Recipients are updated here for existing discussions here.\n        if (discussion) {\n            discussion.save({relationships: {recipientUsers, recipientGroups}})\n                .then(() => {\n                    if (app.current instanceof DiscussionPage) {\n                        app.current.stream.update();\n                    }\n                    m.redraw();\n                });\n        }\n\n        // Use the onsubmit callback to trigger an update in the DiscussionComposer\n        if (this.props.onsubmit) this.props.onsubmit(recipients);\n\n        app.modal.close();\n\n        m.redraw.strategy('none');\n    }\n}\n","export default function recipientCountLabel(count, attrs = {}) {\n  attrs.style = attrs.style || {};\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\n\n  var label = app.translator.transChoice('fof-byobu.forum.labels.recipients', count, {count});\n\n  return (\n    m('span', attrs,\n        <span className=\"RecipientLabel-text\">\n            {label}\n        </span>\n    )\n  );\n}\n","import {extend, override} from \"flarum/extend\";\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\nimport AddRecipientModal from \"./components/AddRecipientModal\";\nimport recipientCountLabel from \"../common/helpers/recipientCountLabel\";\nimport User from \"flarum/models/User\";\nimport Group from \"flarum/models/Group\";\nimport ItemList from \"flarum/utils/ItemList\";\n\nexport default function (app) {\n    // Add recipient-selection abilities to the discussion composer.\n    DiscussionComposer.prototype.recipients = new ItemList;\n    DiscussionComposer.prototype.recipientUsers = [];\n    DiscussionComposer.prototype.recipientGroups = [];\n\n    // Add a recipient selection modal when clicking the recipient tag label.\n    DiscussionComposer.prototype.chooseRecipients = function () {\n        app.modal.show(\n            new AddRecipientModal({\n                selectedRecipients: this.recipients,\n                onsubmit: (recipients) => {\n                    this.recipients = recipients;\n\n                    // Focus on recipient autocomplete field.\n                    this.$('.RecipientsInput').focus();\n                }\n            })\n        )\n    };\n\n    // Add a tag-selection menu to the discussion composer's header, after the\n    // title.\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n        if (app.session.user && app.forum.attribute('canStartPrivateDiscussion')) {\n\n            const recipients = this.recipients.toArray();\n\n            items.add('recipients', (\n                <a className=\"DiscussionComposer-changeRecipients\"\n                   onclick={this.chooseRecipients.bind(this)}>\n                    {recipients.length\n                        ? recipientCountLabel(recipients.length)\n                        : <span className=\"RecipientLabel none\">{app.translator.trans('fof-byobu.forum.buttons.add_recipients')}</span>}\n                </a>\n            ), 5);\n        }\n    });\n\n    // Add the selected tags as data to submit to the server.\n    extend(DiscussionComposer.prototype, 'data', function (data) {\n        const users = [];\n        const groups = [];\n        this.recipients.toArray().forEach(recipient => {\n\n            if (recipient instanceof User) {\n                users.push(recipient);\n            }\n\n            if (recipient instanceof Group) {\n                groups.push(recipient);\n            }\n        });\n\n        data.relationships = data.relationships || {};\n\n        if (users.length) {\n            data.relationships.recipientUsers = users;\n        }\n\n        if (groups.length) {\n            data.relationships.recipientGroups = groups;\n        }\n    });\n}\n","import extract from 'flarum/utils/extract';\nimport recipientLabel from './recipientLabel';\n\nexport default function recipientsLabel(recipients, attrs = {}) {\n  const children = [];\n  const link = extract(attrs, 'link');\n\n  attrs.className = 'RecipientsLabel ' + (attrs.className || '');\n\n  if (recipients) {\n      recipients.forEach(recipient => {\n          children.push(recipientLabel(recipient, {link}));\n      });\n  } else {\n    children.push(recipientLabel());\n  }\n\n  return <span {...attrs}>{children}</span>;\n}\n","import {extend} from \"flarum/extend\";\nimport DiscussionListItem from \"flarum/components/DiscussionListItem\";\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\nimport DiscussionHero from \"flarum/components/DiscussionHero\";\nimport DiscussionList from \"flarum/components/DiscussionList\";\nimport recipientsLabel from \"../common/helpers/recipientsLabel\";\n\nexport default function() {\n\n    const addToDiscussion = function(discussion, items, long) {\n        let recipients = [];\n\n        if (discussion.recipientUsers().length) {\n            recipients = recipients.concat(discussion.recipientUsers());\n        }\n\n        if (discussion.recipientGroups().length) {\n            recipients = recipients.concat(discussion.recipientGroups());\n        }\n\n        if (recipients && recipients.length) {\n            if (long) {\n                items.add('recipients', recipientsLabel(recipients), 10);\n            } else {\n                items.add('recipients', recipientsLabel(recipients, {link: true}), 4);\n            }\n        }\n    };\n\n    /**\n     * Adds User labels on the discussion index page.\n     */\n    extend(DiscussionListItem.prototype, 'infoItems', function(items) {\n        const discussion = this.props.discussion;\n\n        addToDiscussion(discussion, items, true);\n    });\n\n    /**\n     * Require recipients from the API whenever we're loading a Discussion page.\n     */\n    extend(DiscussionPage.prototype, 'params', function(params) {\n        params.include.push('recipientUsers');\n        params.include.push('recipientGroups');\n    });\n    extend(DiscussionList.prototype, 'requestParams', function(params) {\n        params.include.push('recipientUsers');\n        params.include.push('recipientGroups');\n    });\n\n\n    /**\n     * Adds User labels on the discussion Hero.\n     */\n    extend(DiscussionHero.prototype, 'items', function(items) {\n        const discussion = this.props.discussion;\n\n        addToDiscussion(discussion, items, false);\n    });\n}\n","import { extend } from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport Button from 'flarum/components/Button';\n\nimport AddRecipientModal from './components/AddRecipientModal';\n\nexport default function() {\n    // Add a control allowing the discussion to be moved to another category.\n    extend(DiscussionControls, 'moderationControls', function(items, discussion) {\n        if (discussion.canEditRecipients()) {\n            items.add('recipients', Button.component({\n                children: app.translator.trans('fof-byobu.forum.buttons.edit_recipients'),\n                icon: 'far fa-map',\n                onclick: () => app.modal.show(new AddRecipientModal({discussion}))\n            }));\n        }\n    });\n}\n","import {extend} from \"flarum/extend\";\nimport Discussion from \"flarum/models/Discussion\";\nimport Badge from \"flarum/components/Badge\";\n\nexport default function addHasRecipientsBadge() {\n    extend(Discussion.prototype, 'badges', function (badges) {\n        if (this.recipientUsers().length || this.recipientGroups().length) {\n            badges.add('private', Badge.component({\n                type: 'private',\n                label: app.translator.trans('fof-byobu.forum.badges.is_private.tooltip'),\n                icon: 'fas fa-map'\n            }), 10);\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport UserControls from 'flarum/utils/UserControls';\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\n\nexport default function () {\n    // Add a control allowing the discussion to be moved to another category.\n    extend(UserControls, 'userControls', function (items, user) {\n        if (app.session.user &&\n            app.session.user.id() !== user.id() &&\n            app.forum.attribute('canStartPrivateDiscussion') &&\n            ((user.blocksPd() === false || app.forum.attribute('canStartPrivateDiscussionWithBlockers')) && !user.cannotBeDirectMessaged())\n        ) {\n            items.add('private-discussion', Button.component({\n                children: app.translator.trans('fof-byobu.forum.buttons.send_pd', {username: user.username()}),\n                icon: 'far fa-map',\n                onclick: () => {\n                    const deferred = m.deferred();\n\n                    let recipients = new ItemList();\n                    recipients.add('users:' + user.id(), user);\n                    recipients.add('users:' + app.session.user.id(), app.session.user);\n\n                    DiscussionComposer.prototype.recipients = recipients;\n\n                    const component = new DiscussionComposer({\n                        user: app.session.user,\n                        recipients: recipients,\n                        recipientUsers: recipients\n                    });\n\n                    app.composer.load(component);\n                    app.composer.show();\n\n                    deferred.resolve(component);\n\n                    return deferred.promise;\n                }\n            }));\n        }\n\n        return items;\n    });\n}\n","import {extend} from 'flarum/extend';\nimport SettingsPage from 'flarum/components/SettingsPage';\nimport Switch from \"flarum/components/Switch\";\n\nexport default function () {\n    extend(SettingsPage.prototype, 'privacyItems', function (items) {\n        items.add('byobu-block-dm',\n            Switch.component({\n                children: app.translator.trans('fof-byobu.forum.user.settings.block_pd'),\n                state: this.user.preferences().blocksPd,\n                onchange: (value, component) => this.preferenceSaver('blocksPd')(value, component)\n            })\n        )\n    });\n}\n","import DiscussionList from 'flarum/components/DiscussionList';\n\nexport default class PrivateDiscussionList extends DiscussionList\n{\n}\n","import UserPage from 'flarum/components/UserPage';\nimport PrivateDiscussionList from './PrivateDiscussionList';\n\nexport default class PrivateDiscussionsUserPage extends UserPage {\n    init() {\n        super.init();\n\n        this.loadUser(m.route.param('username'));\n\n        this.list = new PrivateDiscussionList({\n            params: {\n                q: `byobu:${this.user.username()} is:private`,\n                sort: 'newest'\n            }\n        });\n\n        this.list.refresh();\n    }\n\n    content() {\n        return (\n            <div className=\"DiscussionsUserPage\">\n                {this.list.render()}\n            </div>\n        );\n    }\n}\n","import {extend} from 'flarum/extend';\nimport UserPage from 'flarum/components/UserPage';\nimport LinkButton from 'flarum/components/LinkButton';\n\nimport PrivateDiscussionsUserPage from \"./components/PrivateDiscussionsUserPage\";\n\nexport default function () {\n    if (!Number(app.data['fof-byobu.enable_byobu_user_page'])) return;\n\n    app.routes['user.byobu'] = {path: '/u/:username/byobu', component: PrivateDiscussionsUserPage.component()};\n\n    extend(UserPage.prototype, 'navItems', function (items) {\n        items.add('byobu',\n            LinkButton.component({\n                href: app.route('user.byobu', {username: this.user.username()}),\n                children: app.translator.trans('fof-byobu.forum.user.byobu_link'),\n                icon: 'fas fa-map'\n            }),\n            85\n        );\n    })\n}\n","import { extend } from 'flarum/extend';\nimport Page from 'flarum/components/Page';\nimport ItemList from 'flarum/utils/ItemList';\nimport listItems from 'flarum/helpers/listItems';\nimport icon from 'flarum/helpers/icon';\nimport PrivateDiscussionList from './PrivateDiscussionList';\nimport WelcomeHero from 'flarum/components/WelcomeHero';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport LogInModal from 'flarum/components/LogInModal';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport Select from 'flarum/components/Select';\nimport Button from 'flarum/components/Button';\nimport LinkButton from 'flarum/components/LinkButton';\nimport SelectDropdown from 'flarum/components/SelectDropdown';\n\nexport default class PrivateDiscussionIndex extends Page\n{\n    init() {\n        super.init();\n\n        // If the user is returning from a discussion page, then take note of which\n        // discussion they have just visited. After the view is rendered, we will\n        // scroll down so that this discussion is in view.\n        if (app.previous instanceof DiscussionPage) {\n            this.lastDiscussion = app.previous.discussion;\n        }\n\n        // If the user is coming from the discussion list, then they have either\n        // just switched one of the parameters (filter, sort, search) or they\n        // probably want to refresh the results. We will clear the discussion list\n        // cache so that results are reloaded.\n        if (app.previous instanceof PrivateDiscussionIndex) {\n            app.cache.privateDiscussionList = null;\n        }\n\n        const params = this.params();\n\n        if (app.cache.privateDiscussionList) {\n            // Compare the requested parameters (sort, search query) to the ones that\n            // are currently present in the cached discussion list. If they differ, we\n            // will clear the cache and set up a new discussion list component with\n            // the new parameters.\n            Object.keys(params).some(key => {\n                if (app.cache.privateDiscussionList.props.params[key] !== params[key]) {\n                    app.cache.privateDiscussionList = null;\n                    return true;\n                }\n            });\n        }\n\n        if (!app.cache.privateDiscussionList) {\n            app.cache.privateDiscussionList = new PrivateDiscussionList({params});\n        }\n\n        app.history.push('private-index', icon('far fa-map'));\n\n        this.bodyClass = 'App--index';\n    }\n\n    onunload() {\n        // Save the scroll position so we can restore it when we return to the\n        // discussion list.\n        app.cache.scrollTop = $(window).scrollTop();\n    }\n\n    view() {\n        return (\n            <div className=\"IndexPage\">\n                {this.hero()}\n                <div className=\"container\">\n                    <nav className=\"IndexPage-nav sideNav\">\n                        <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                    </nav>\n                    <div className=\"IndexPage-results sideNavOffset\">\n                        <div className=\"IndexPage-toolbar\">\n                            <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\n                            <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\n                        </div>\n                        {app.cache.discussionList.render()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    config(isInitialized, context) {\n        super.config(...arguments);\n\n        if (isInitialized) return;\n\n        extend(context, 'onunload', () => $('#app').css('min-height', ''));\n\n        app.setTitle('');\n        app.setTitleCount(0);\n\n        // Work out the difference between the height of this hero and that of the\n        // previous hero. Maintain the same scroll position relative to the bottom\n        // of the hero so that the sidebar doesn't jump around.\n        const oldHeroHeight = app.cache.heroHeight;\n        const heroHeight = app.cache.heroHeight = this.$('.Hero').outerHeight();\n        const scrollTop = app.cache.scrollTop;\n\n        $('#app').css('min-height', $(window).height() + heroHeight);\n\n        // Scroll to the remembered position. We do this after a short delay so that\n        // it happens after the browser has done its own \"back button\" scrolling,\n        // which isn't right. https://github.com/flarum/core/issues/835\n        const scroll = () => $(window).scrollTop(scrollTop - oldHeroHeight + heroHeight);\n        scroll();\n        setTimeout(scroll, 1);\n\n        // If we've just returned from a discussion page, then the constructor will\n        // have set the `lastDiscussion` property. If this is the case, we want to\n        // scroll down to that discussion so that it's in view.\n        if (this.lastDiscussion) {\n            const $discussion = this.$(`.DiscussionListItem[data-id=\"${this.lastDiscussion.id()}\"]`);\n\n            if ($discussion.length) {\n                const indexTop = $('#header').outerHeight();\n                const indexBottom = $(window).height();\n                const discussionTop = $discussion.offset().top;\n                const discussionBottom = discussionTop + $discussion.outerHeight();\n\n                if (discussionTop < scrollTop + indexTop || discussionBottom > scrollTop + indexBottom) {\n                    $(window).scrollTop(discussionTop - indexTop);\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the component to display as the hero.\n     *\n     * @return {MithrilComponent}\n     */\n    hero() {\n        return WelcomeHero.component();\n    }\n\n    /**\n     * Build an item list for the sidebar of the index page. By default this is a\n     * \"New Discussion\" button, and then a DropdownSelect component containing a\n     * list of navigation items.\n     *\n     * @return {ItemList}\n     */\n    sidebarItems() {\n        const items = new ItemList();\n        const canStartDiscussion = app.forum.attribute('canStartDiscussion') || !app.session.user;\n\n        items.add('newDiscussion',\n            Button.component({\n                children: app.translator.trans(canStartDiscussion ? 'core.forum.index.start_discussion_button' : 'core.forum.index.cannot_start_discussion_button'),\n                icon: 'fas fa-edit',\n                className: 'Button Button--primary IndexPage-newDiscussion',\n                itemClassName: 'App-primaryControl',\n                onclick: this.newDiscussion.bind(this),\n                disabled: !canStartDiscussion\n            })\n        );\n\n        items.add('nav',\n            SelectDropdown.component({\n                children: this.navItems(this).toArray(),\n                buttonClassName: 'Button',\n                className: 'App-titleControl'\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the navigation in the sidebar of the index page. By\n     * default this is just the 'All Discussions' link.\n     *\n     * @return {ItemList}\n     */\n    navItems() {\n        const items = new ItemList();\n        const params = this.stickyParams();\n\n        items.add('allDiscussions',\n            LinkButton.component({\n                href: app.route('index', params),\n                children: app.translator.trans('core.forum.index.all_discussions_link'),\n                icon: 'far fa-comments'\n            }),\n            100\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the part of the toolbar which is concerned with how\n     * the results are displayed. By default this is just a select box to change\n     * the way discussions are sorted.\n     *\n     * @return {ItemList}\n     */\n    viewItems() {\n        const items = new ItemList();\n        const sortMap = app.cache.discussionList.sortMap();\n\n        const sortOptions = {};\n        for (const i in sortMap) {\n            sortOptions[i] = app.translator.trans('core.forum.index_sort.' + i + '_button');\n        }\n\n        items.add('sort',\n            Select.component({\n                options: sortOptions,\n                value: this.params().sort || Object.keys(sortMap)[0],\n                onchange: this.changeSort.bind(this)\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the part of the toolbar which is about taking action\n     * on the results. By default this is just a \"mark all as read\" button.\n     *\n     * @return {ItemList}\n     */\n    actionItems() {\n        const items = new ItemList();\n\n        items.add('refresh',\n            Button.component({\n                title: app.translator.trans('core.forum.index.refresh_tooltip'),\n                icon: 'fas fa-refresh',\n                className: 'Button Button--icon',\n                onclick: () => app.cache.discussionList.refresh()\n            })\n        );\n\n        if (app.session.user) {\n            items.add('markAllAsRead',\n                Button.component({\n                    title: app.translator.trans('core.forum.index.mark_all_as_read_tooltip'),\n                    icon: 'fas fa-check',\n                    className: 'Button Button--icon',\n                    onclick: this.markAllAsRead.bind(this)\n                })\n            );\n        }\n\n        return items;\n    }\n\n    /**\n     * Return the current search query, if any. This is implemented to activate\n     * the search box in the header.\n     *\n     * @see Search\n     * @return {String}\n     */\n    searching() {\n        return this.params().q;\n    }\n\n    /**\n     * Redirect to the index page without a search filter. This is called when the\n     * 'x' is clicked in the search box in the header.\n     *\n     * @see Search\n     */\n    clearSearch() {\n        const params = this.params();\n        delete params.q;\n\n        m.route(app.route(this.props.routeName, params));\n    }\n\n    /**\n     * Redirect to the index page using the given sort parameter.\n     *\n     * @param {String} sort\n     */\n    changeSort(sort) {\n        const params = this.params();\n\n        if (sort === Object.keys(app.cache.discussionList.sortMap())[0]) {\n            delete params.sort;\n        } else {\n            params.sort = sort;\n        }\n\n        m.route(app.route(this.props.routeName, params));\n    }\n\n    /**\n     * Get URL parameters that stick between filter changes.\n     *\n     * @return {Object}\n     */\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q')\n        };\n    }\n\n    /**\n     * Get parameters to pass to the DiscussionList component.\n     *\n     * @return {Object}\n     */\n    params() {\n        const params = this.stickyParams();\n\n        params.filter = m.route.param('filter');\n\n        return params;\n    }\n\n    /**\n     * Log the user in and then open the composer for a new discussion.\n     *\n     * @return {Promise}\n     */\n    newDiscussion() {\n        const deferred = m.deferred();\n\n        if (app.session.user) {\n            this.composeNewDiscussion(deferred);\n        } else {\n            app.modal.show(\n                new LogInModal({\n                    onlogin: this.composeNewDiscussion.bind(this, deferred)\n                })\n            );\n        }\n\n        return deferred.promise;\n    }\n\n    /**\n     * Initialize the composer for a new discussion.\n     *\n     * @param {Deferred} deferred\n     * @return {Promise}\n     */\n    composeNewDiscussion(deferred) {\n        const component = new DiscussionComposer({user: app.session.user});\n\n        app.composer.load(component);\n        app.composer.show();\n\n        deferred.resolve(component);\n\n        return deferred.promise;\n    }\n\n    /**\n     * Mark all discussions as read.\n     *\n     * @return void\n     */\n    markAllAsRead() {\n        const confirmation = confirm(app.translator.trans('core.forum.index.mark_all_as_read_confirmation'));\n\n        if (confirmation) {\n            app.session.user.save({readTime: new Date()});\n        }\n    }\n}\n","import EventPost from \"flarum/components/EventPost\";\nimport recipientsLabel from \"../../common/helpers/recipientsLabel\";\n\nexport default class RecipientsModified extends EventPost {\n    static initProps(props) {\n        super.initProps(props);\n\n        function diff(diff1, diff2, store) {\n            return diff1\n                .filter(item => diff2.indexOf(item) === -1)\n                .map(id => app.store.getById(store, id));\n        }\n\n        const content = props.post.content();\n\n        // For event posts existing before groups functionality.\n        if (!content['new'] && content.length == 2) {\n            const oldRecipients = props.post.content()[0];\n            const newRecipients = props.post.content()[1];\n            props.added = diff(newRecipients, oldRecipients, 'users');\n            props.removed = diff(oldRecipients, newRecipients, 'users');\n        } else {\n            var usersAdded = diff(content['new']['users'], content['old']['users'], 'users');\n            var usersRemoved = diff(content['old']['users'], content['new']['users'], 'users');\n            var groupsAdded = diff(content['new']['groups'], content['old']['groups'], 'groups');\n            var groupsRemoved = diff(content['old']['groups'], content['new']['groups'], 'groups');\n\n            props.added = usersAdded.concat(groupsAdded);\n            props.removed = usersRemoved.concat(groupsRemoved);\n        }\n    }\n\n    icon() {\n        return 'far fa-map';\n    }\n\n    descriptionKey() {\n\n        var localeBase = 'fof-byobu.forum.post.recipients_modified.';\n\n        if (this.props.added.length) {\n            if (this.props.removed.length) {\n                return localeBase + 'added_and_removed';\n            }\n\n            return localeBase + 'added';\n        }\n\n        return localeBase + 'removed';\n    }\n\n    descriptionData() {\n        const data = {};\n\n        if (this.props.added.length) {\n            data.added = recipientsLabel(this.props.added, {link: true});\n        }\n\n        if (this.props.removed.length) {\n            data.removed = recipientsLabel(this.props.removed, {link: true});\n        }\n\n        return data;\n    }\n}\n","import Model from \"flarum/Model\";\nimport Discussion from \"flarum/models/Discussion\";\nimport User from \"flarum/models/User\";\nimport addRecipientComposer from \"./addRecipientComposer\";\nimport addRecipientLabels from \"./addRecipientLabels\";\nimport addRecipientsControl from \"./addRecipientsControl\";\nimport addHasRecipientsBadge from \"./addHasRecipientsBadge\";\nimport addDiscussPrivatelyControl from './addDiscussPrivatelyControl';\nimport addPrivacySetting from './addPrivacySetting';\nimport addPrivateDiscussionsPage from \"./addPrivateDiscussionsPage\";\n\nimport PrivateDiscussionIndex from \"./components/PrivateDiscussionIndex\";\nimport RecipientsModified from \"./components/RecipientsModified\";\n\napp.initializers.add('fof-byobu', function(app) {\n    app.routes.private_discussions = {path: '/private-discussions', component: PrivateDiscussionIndex.component()};\n\n    Discussion.prototype.recipientUsers = Model.hasMany('recipientUsers');\n    Discussion.prototype.oldRecipientUsers = Model.hasMany('oldRecipientUsers');\n    Discussion.prototype.recipientGroups = Model.hasMany('recipientGroups');\n    Discussion.prototype.oldRecipientGroups = Model.hasMany('oldRecipientGroups');\n\n    Discussion.prototype.canEditRecipients = Model.attribute('canEditRecipients');\n    Discussion.prototype.canEditUserRecipients = Model.attribute('canEditUserRecipients');\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\n\n    User.prototype.blocksPd = Model.attribute('blocksPd');\n    User.prototype.cannotBeDirectMessaged = Model.attribute('cannotBeDirectMessaged');\n\n    app.postComponents.recipientsModified = RecipientsModified;\n\n    addRecipientComposer(app);\n    addRecipientLabels();\n    addRecipientsControl();\n    addHasRecipientsBadge();\n    addPrivacySetting();\n\n    addDiscussPrivatelyControl();\n\n    addPrivateDiscussionsPage();\n});\n","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Search'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/WelcomeHero'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/SelectDropdown'];","module.exports = flarum.core.compat['components/EventPost'];"],"sourceRoot":""}