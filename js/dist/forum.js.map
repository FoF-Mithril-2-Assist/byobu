{"version":3,"sources":["webpack://@fof/byobu/webpack/bootstrap","webpack://@fof/byobu/external \"flarum.core.compat['extend']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Discussion']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/User']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Button']\"","webpack://@fof/byobu/external \"flarum.core.compat['Model']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Group']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Select']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/highlight']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/username']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extract']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/UserPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/listItems']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/classList']\"","webpack://@fof/byobu/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/byobu/./src/forum/components/sources/UserSearchSource.js","webpack://@fof/byobu/./src/forum/components/sources/GroupSearchSource.js","webpack://@fof/byobu/./src/common/helpers/recipientLabel.js","webpack://@fof/byobu/./src/forum/components/RecipientSearch.js","webpack://@fof/byobu/./src/forum/components/AddRecipientModal.js","webpack://@fof/byobu/./src/common/helpers/recipientCountLabel.js","webpack://@fof/byobu/./src/forum/addRecipientComposer.js","webpack://@fof/byobu/./src/common/helpers/recipientsLabel.js","webpack://@fof/byobu/./src/forum/addRecipientLabels.js","webpack://@fof/byobu/./src/forum/addRecipientsControl.js","webpack://@fof/byobu/./src/forum/addHasRecipientsBadge.js","webpack://@fof/byobu/./src/forum/addDiscussPrivatelyControl.js","webpack://@fof/byobu/./src/forum/addPrivacySetting.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionsUserPage.js","webpack://@fof/byobu/./src/forum/addPrivateDiscussionsPage.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionList.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionIndex.js","webpack://@fof/byobu/./src/forum/components/RecipientsModified.js","webpack://@fof/byobu/./src/forum/index.js","webpack://@fof/byobu/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Search']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/avatar']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Badge']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/UserControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Page']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/WelcomeHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LogInModal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SelectDropdown']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/EventPost']\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserSearchSource_UserSearchSource","view","query","_this","this","length","loading","app","cache","byobuResults","className","translator","trans","map","user","username_default","children","highlight_default","data-index","id","avatar_default","store","find","filter","q","forum","attribute","page","limit","then","pushResults","results","_this2","payload","data","result","getById","push","redraw","GroupSearchSource_GroupSearchSource","search","toLowerCase","all","group","namePlural","substr","groupName","class","recipientLabel","recipient","attrs","style","label","link","extract_default","User_default","a","title","username","href","route","config","Group_default","RecipientSearch_RecipientSearch","isInitialized","$search","$","on","e","target","addRecipient","focus","parentNode","_Search","sources","sourceItems","toArray","props","selected","onclick","removeRecipient","classList_default","open","focused","active","loadingSources","element","type","placeholder","extractText_default","oninput","withAttr","onfocus","hasFocus","onblur","in","LoadingIndicator_default","component","size","source","items","ItemList_default","discussion","canEditUserRecipients","add","canEditGroupRecipients","clear","values","split","findRecipient","remove","Search_default","AddRecipientModal_AddRecipientModal","init","_Modal","prop","assignInitialRecipients","selectedRecipients","merge","session","recipientSearch","recipientUsers","recipientGroups","content","Button_default","disabled","icon","select","metaKey","ctrlKey","indexOf","index","submit","onsubmit","preventDefault","recipients","forEach","save","relationships","current","DiscussionPage_default","stream","update","modal","close","strategy","Modal_default","recipientCountLabel","count","transChoice","recipientsLabel","addRecipientsControl","external_flarum_core_compat_extend_","DiscussionControls_default","canEditRecipients","show","addHasRecipientsBadge","Discussion_default","badges","Badge_default","addDiscussPrivatelyControl","UserControls_default","blocksPd","deferred","DiscussionComposer_default","composer","load","resolve","promise","addPrivacySetting","SettingsPage_default","Switch_default","state","preferences","onchange","preferenceSaver","PrivateDiscussionsUserPage_PrivateDiscussionsUserPage","_UserPage","loadUser","param","DiscussionList_default","params","sort","UserPage_default","addPrivateDiscussionsPage","Number","routes","path","LinkButton_default","PrivateDiscussionList_PrivateDiscussionList","loadResults","offset","preloadedDiscussions","preloadedDocument","requestParams","include","join","PrivateDiscussionIndex_PrivateDiscussionIndex","_Page","previous","lastDiscussion","PrivateDiscussionIndex","privateDiscussionList","keys","some","history","icon_default","bodyClass","onunload","scrollTop","window","hero","listItems_default","sidebarItems","viewItems","actionItems","discussionList","render","context","apply","arguments","css","setTitle","setTitleCount","oldHeroHeight","heroHeight","outerHeight","height","scroll","setTimeout","$discussion","indexTop","indexBottom","discussionTop","top","discussionBottom","WelcomeHero_default","canStartDiscussion","itemClassName","newDiscussion","SelectDropdown_default","navItems","buttonClassName","stickyParams","sortMap","sortOptions","Select_default","options","changeSort","refresh","markAllAsRead","searching","clearSearch","routeName","composeNewDiscussion","LogInModal_default","onlogin","confirm","readTime","Date","Page_default","RecipientsModified_RecipientsModified","initProps","diff","diff1","diff2","item","_EventPost","post","usersAdded","usersRemoved","groupsAdded","groupsRemoved","added","concat","removed","oldRecipients","newRecipients","descriptionKey","localeBase","descriptionData","initializers","private_discussions","external_flarum_core_compat_Model_default","hasMany","oldRecipientUsers","oldRecipientGroups","postComponents","recipientsModified","chooseRecipients","users","groups","addRecipientComposer","addToDiscussion","long","DiscussionListItem_default","DiscussionHero_default","addRecipientLabels"],"mappings":"2BACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oBClFAhC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,sBCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,iCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,gDCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,8BCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,qBCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,+BCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,4CCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,4DCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,mCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,gCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,sCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,wCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,6HCAA,SAAAC,EAAAC,EAAAC,GACAD,EAAAR,UAAAlB,OAAAY,OAAAe,EAAAT,WACAQ,EAAAR,UAAAU,YAAAF,EACAA,EAAAG,UAAAF,2ICCqBG,sDACjBC,KAAA,SAAKC,GAAO,IAAAC,EAAAC,KACR,MAAKF,GAASA,EAAMG,OAAS,GAAKD,KAAKE,SAAvC,CAQA,GANKC,IAAIC,MAAMC,eACXF,IAAIC,MAAMC,iBAGdL,KAAKF,MAAQA,EAERK,IAAIC,MAAMC,aAAaL,KAAKF,OAW7B,OACItC,EAAA,MAAI8C,UAAU,mBAAmBH,IAAII,WAAWC,MAAM,oCACtDL,IAAIC,MAAMC,aAAaL,KAAKF,OAAOW,IAAI,SAAAC,GACnC,IAAM/C,EAAOgD,IAASD,GAGtB,OAFA/C,EAAKiD,SAAS,GAAKC,IAAUlD,EAAKiD,SAAS,GAAIb,EAAKD,OAGhDtC,EAAA,MAAI8C,UAAU,eAAeQ,aAAY,SAAWJ,EAAKK,MACrDvD,EAAA,KAAGsD,aAAY,SAAWJ,EAAKK,MAC1BC,IAAON,GACP/C,OAnBrBqC,KAAKE,SAAU,EAEfC,IAAIC,MAAMC,aAAaL,KAAKF,UAC5BK,IAAIc,MAAMC,KAAK,SACXC,QAASC,EAAGpB,KAAKF,MAAQ,cAAgBK,IAAIkB,MAAMC,UAAU,gBAAkB,gBAAkB,KACjGC,MAAOC,MAAO,KACfC,KAAKzB,KAAK0B,YAAY9C,KAAKoB,WAqBtC0B,YAAA,SAAYC,GAAS,IAAAC,EAAA5B,KACjB2B,EAAQE,QAAQC,KAAKrB,IAAI,SAAAsB,GACrB,IAAIrB,EAAOP,IAAIc,MAAMe,QAAQ,QAASD,EAAOhB,IAC7CZ,IAAIC,MAAMC,aAAauB,EAAK9B,OAAOmC,KAAKvB,KAE5CV,KAAKE,SAAU,EACf1C,EAAE0E,eC/CWC,sDACjBC,OAAA,SAAOtC,GACH,OAAOK,IAAIc,MAAMC,KAAK,UAClBC,QAASC,EAAGtB,GACZyB,MAAOC,MAAO,QAItB3B,KAAA,SAAKC,GACDA,EAAQA,EAAMuC,cAEd,IAAMV,EAAUxB,IAAIc,MAAMqB,IAAI,UACzBnB,OAAO,SAAAoB,GAAK,OAAIA,EAAMC,aAAaH,cAAcI,OAAO,EAAG3C,EAAMG,UAAYH,IAElF,OAAK6B,EAAQ1B,QAGTzC,EAAA,MAAI8C,UAAU,mBAAmBH,IAAII,WAAWC,MAAM,2CACtDmB,EAAQlB,IAAI,SAAA8B,GACR,IAAMG,EAAYH,EAAMC,aACpB7E,EAAOkD,IAAU6B,EAAW5C,GAEhC,OACItC,EAAA,MAAI8C,UAAU,eAAeQ,aAAY,UAAYyB,EAAMxB,MACvDvD,EAAA,KAAGsD,aAAY,UAAYyB,EAAMxB,MAC7BvD,EAAA,QAAMmF,MAAM,aAAahF,QAXjB,6FCXrB,SAASiF,EAAeC,EAAWC,QAAY,IAAZA,UAChDA,EAAMC,MAAQD,EAAMC,UACpBD,EAAMxC,UAAY,mBAAqBwC,EAAMxC,WAAa,IAE1D,IAEI0C,EAFEC,EAAOC,IAAQJ,EAAO,QAmB5B,OAfID,aAAqBM,EAAAC,GACrBJ,EAAQrC,IAASkC,GAEbI,IACAH,EAAMO,MAAQR,EAAUS,YAAc,GACtCR,EAAMS,KAAOpD,IAAIqD,MAAM9C,KAAKmC,GAC5BC,EAAMW,OAASjG,EAAEgG,QAEdX,aAAqBa,EAAAN,EAC5BJ,EAAQH,EAAUL,cAElBM,EAAMxC,WAAa,QACnB0C,EAAQ7C,IAAII,WAAWC,MAAM,wCAI/BhD,EAAGyF,EAAO,IAAM,OAASH,EACrBtF,EAAA,QAAM8C,UAAU,uBACX0C,QCpBQW,kGAEjBF,OAAA,SAAOG,GAAe,IAAA7D,EAAAC,KAClB,IAAI4D,EAAJ,CAEA,IAAMC,EAAU7D,KAEhBA,KAAK8D,EAAE,mBAAmBC,GAAG,QAAS,SAACC,GACnC,IAAMC,EAASlE,EAAK+D,EAAE,wBAEtBD,EAAQK,aAAaD,EAAOnC,KAAK,UACjC+B,EAAQC,EAAE,oBAAoBK,UAGlCnE,KAAK8D,EAAE,mBAAmBC,GAAG,aAAc,SAACC,GACxC,IAAMC,EAASlE,EAAK+D,EAAEE,EAAEC,OAAOG,YAE/BP,EAAQK,aAAaD,EAAOnC,KAAK,UACjC+B,EAAQC,EAAE,oBAAoBK,UAGlCE,EAAArF,UAAMyE,OAANlG,KAAAyC,KAAa4D,OAGjB/D,KAAA,WAAO,IAAA+B,EAAA5B,UACyB,IAAjBA,KAAK3B,SACZ2B,KAAK3B,MAAM,IAGf,IAAM6B,EAAUF,KAAK3B,SAAW2B,KAAK3B,QAAQ4B,QAAU,EAMvD,OAJKD,KAAKsE,UACNtE,KAAKsE,QAAUtE,KAAKuE,cAAcC,WAG/BhH,EAAE,OACL8C,UAAW,iCAEX9C,EAAE,OACE8C,UAAW,4CACZN,KAAKyE,MAAMC,WAAWF,UAAU/D,IAAI,SAAAoC,GAAS,OAC5CD,EAAeC,GACX8B,QAAS,WACL/C,EAAKgD,gBAAgB/B,SAIjCrF,EAAE,SACE8C,UAAW,+BAAiCuE,KACxCC,OAAQ9E,KAAK3B,QACb0G,UAAW/E,KAAK3B,QAChB2G,SAAUhF,KAAK3B,QACf6B,UAAWF,KAAKiF,iBAEpBxB,OAAQ,SAAUyB,GACdA,EAAQf,SAEZgB,KAAM,SACNC,YAAaC,IAAYlF,IAAII,WAAWC,MAAM,4CAC9CnC,MAAO2B,KAAK3B,QACZiH,QAAS9H,EAAE+H,SAAS,QAASvF,KAAK3B,OAClCmH,QAAS,kBAAM5D,EAAK6D,UAAW,GAC/BC,OAAQ,kBAAM9D,EAAK6D,UAAW,KAElCjI,EAAE,MACE8C,UAAW,qCAAuCuE,KAC9Cc,KAAMzF,KAEXF,KAAKiF,eACFW,EAAAxC,EAAiByC,WAAWC,KAAM,OAAQxF,UAAW,qCACrDN,KAAKsE,QAAQ7D,IAAI,SAAAsF,GAAM,OAAIA,EAAOlG,KAAK+B,EAAKvD,iBAU1DkG,YAAA,WACI,IAAMyB,EAAQ,IAAIC,EAAA7C,EAkBlB,QAdMpD,KAAKyE,MAAMyB,YAAc/F,IAAIkB,MAAMC,UAAU,uCAC9CtB,KAAKyE,MAAMyB,YAAclG,KAAKyE,MAAMyB,WAAWC,0BAEhDH,EAAMI,IAAI,QAAS,IAAIxG,KAKrBI,KAAKyE,MAAMyB,YAAc/F,IAAIkB,MAAMC,UAAU,wCAC9CtB,KAAKyE,MAAMyB,YAAclG,KAAKyE,MAAMyB,WAAWG,2BAEhDL,EAAMI,IAAI,SAAU,IAAIjE,GAGrB6D,KAOXM,MAAA,WACItG,KAAK3B,MAAM,IAEXb,EAAE0E,YAQNgC,aAAA,SAAa7F,GAET,IAAIkI,EAASlI,EAAMmI,MAAM,KACrBrB,EAAOoB,EAAO,GACdxF,EAAKwF,EAAO,GAEZ1D,EAAY7C,KAAKyG,cAActB,EAAMpE,GAEzCf,KAAKyE,MAAMC,WAAW0B,IAAI/H,EAAOwE,GAEjC7C,KAAKsG,WAQT1B,gBAAA,SAAgB/B,GACZ,IAAIsC,EAEAtC,aAAqBM,EAAAC,IACrB+B,EAAO,SAEPtC,aAAqBa,EAAAN,IACrB+B,EAAO,UAGXnF,KAAKyE,MAAMC,WAAWgC,OAAOvB,EAAO,IAAMtC,EAAU9B,MAEpDvD,EAAE0E,YAUNuE,cAAA,SAAcxF,EAAOF,GACjB,OAAOZ,IAAIc,MAAMe,QAAQf,EAAOF,OA9JK4F,EAAAvD,GCHxBwD,kGACjBC,KAAA,WACIC,EAAA9H,UAAM6H,KAANtJ,KAAAyC,MAEAA,KAAK0E,SAAWlH,EAAEuJ,KAAK,IAAId,EAAA7C,GAEvBpD,KAAKyE,MAAMyB,WAEXlG,KAAKgH,wBAAwBhH,KAAKyE,MAAMyB,YACjClG,KAAKyE,MAAMwC,mBAAmBzC,UAAUvE,OAAS,EAExDD,KAAK0E,WAAWwC,MAAMlH,KAAKyE,MAAMwC,oBAGjCjH,KAAK0E,WAAW0B,IAAI,SAAWjG,IAAIgH,QAAQzG,KAAKK,KAAMZ,IAAIgH,QAAQzG,MAGtEV,KAAKoH,gBAAkBzD,EAAgBkC,WACnCnB,SAAU1E,KAAK0E,SACfwB,WAAYlG,KAAKyE,MAAMyB,gBAI/Bc,wBAAA,SAAwBd,GAAY,IAAAnG,EAAAC,KAChCkG,EAAWmB,iBAAiB5G,IAAI,SAAAC,GAC5BX,EAAK2E,WAAW0B,IAAI,SAAW1F,EAAKK,KAAML,KAE9CwF,EAAWoB,kBAAkB7G,IAAI,SAAA8B,GAC7BxC,EAAK2E,WAAW0B,IAAI,UAAY7D,EAAMxB,KAAMwB,QAIpDjC,UAAA,WACI,MAAO,uBAGX+C,MAAA,WACI,OAAOrD,KAAKyE,MAAMyB,WACZ/F,IAAII,WAAWC,MAAM,kDAAmD6C,MAAO7F,EAAA,UAAKwC,KAAKyE,MAAMyB,WAAW7C,WAC1GlD,IAAII,WAAWC,MAAM,kDAG/B+G,QAAA,WAEI,OACI/J,EAAA,OAAK8C,UAAU,cACX9C,EAAA,OAAK8C,UAAU,0BACVN,KAAKoH,gBACN5J,EAAA,OAAK8C,UAAU,oDACVkH,EAAApE,EAAOyC,WACJV,KAAM,SACN7E,UAAW,yBACXmH,UAAU,EACVC,KAAM,eACN9G,SAAUT,IAAII,WAAWC,MAAM,2CAQvDmH,OAAA,SAAO3D,IAECA,EAAE4D,SAAW5D,EAAE6D,UAAkD,IAAvC7H,KAAK0E,SAASoD,QAAQ9H,KAAK+H,SACjD/H,KAAK0E,WAAWzE,QAChBD,KAAK8D,EAAE,QAAQkE,YAK3BC,SAAA,SAASjE,GACLA,EAAEkE,iBAEF,IAAMhC,EAAalG,KAAKyE,MAAMyB,WACxBiC,EAAanI,KAAK0E,WAEpB4C,KACAD,KAEJc,EAAW3D,UAAU4D,QAAQ,SAAAvF,GACrBA,aAAqBM,EAAAC,GACrBiE,EAAepF,KAAKY,GAEpBA,aAAqBa,EAAAN,GACrBkE,EAAgBrF,KAAKY,KAKzBqD,GACAA,EAAWmC,MAAMC,eAAgBjB,iBAAgBC,qBAC5C7F,KAAK,WACEtB,IAAIoI,mBAAmBC,EAAApF,GACvBjD,IAAIoI,QAAQE,OAAOC,SAEvBlL,EAAE0E,WAKVlC,KAAKyE,MAAMwD,UAAUjI,KAAKyE,MAAMwD,SAASE,GAE7ChI,IAAIwI,MAAMC,QAEVpL,EAAE0E,OAAO2G,SAAS,YAzGqBC,EAAA1F,GCRhC,SAAS2F,EAAoBC,EAAOlG,QAAY,IAAZA,UACjDA,EAAMC,MAAQD,EAAMC,UACpBD,EAAMxC,UAAY,mBAAqBwC,EAAMxC,WAAa,IAE1D,IAAI0C,EAAQ7C,IAAII,WAAW0I,YAAY,oCAAqCD,GAAQA,UAEpF,OACExL,EAAE,OAAQsF,EACNtF,EAAA,QAAM8C,UAAU,uBACX0C,ICDb,sDCLe,SAASkG,EAAgBf,EAAYrF,QAAY,IAAZA,UAClD,IAAMlC,KACAqC,EAAOC,IAAQJ,EAAO,QAY5B,OAVAA,EAAMxC,UAAY,oBAAsBwC,EAAMxC,WAAa,IAEvD6H,EACAA,EAAWC,QAAQ,SAAAvF,GACfjC,EAASqB,KAAKW,EAAeC,GAAYI,YAG/CrC,EAASqB,KAAKW,KAGTpF,EAAA,OAAUsF,EAAQlC,GCV3B,wBCDAuI,GAAA,WAEIrL,OAAAsL,EAAA,OAAAtL,CAAOuL,GAAAjG,EAAoB,qBAAsB,SAAS4C,EAAOE,GACzDA,EAAWoD,qBACXtD,EAAMI,IAAI,aAAcoB,EAAApE,EAAOyC,WAC3BjF,SAAUT,IAAII,WAAWC,MAAM,2CAC/BkH,KAAM,aACN/C,QAAS,kBAAMxE,IAAIwI,MAAMY,KAAK,IAAI3C,GAAmBV,2CCTtD,SAASsD,KACpB1L,OAAAsL,EAAA,OAAAtL,CAAO2L,EAAArG,EAAWpE,UAAW,SAAU,SAAU0K,IACzC1J,KAAKqH,iBAAiBpH,QAAUD,KAAKsH,kBAAkBrH,SACvDyJ,EAAOtD,IAAI,UAAWuD,GAAAvG,EAAMyC,WACxBV,KAAM,UACNnC,MAAO7C,IAAII,WAAWC,MAAM,6CAC5BkH,KAAM,eACN,8BCLhBkC,GAAA,WAEI9L,OAAAsL,EAAA,OAAAtL,CAAO+L,GAAAzG,EAAc,eAAgB,SAAU4C,EAAOtF,GAkClD,OAjCIP,IAAIgH,QAAQzG,MACZP,IAAIgH,QAAQzG,KAAKK,OAASL,EAAKK,MAC/BZ,IAAIkB,MAAMC,UAAU,+BACC,IAApBZ,EAAKoJ,YAAoB3J,IAAIkB,MAAMC,UAAU,2CAE9C0E,EAAMI,IAAI,qBAAsBoB,EAAApE,EAAOyC,WACnCjF,SAAUT,IAAII,WAAWC,MAAM,mCAAoC8C,SAAU5C,EAAK4C,aAClFoE,KAAM,aACN/C,QAAS,WACL,IAAMoF,EAAWvM,EAAEuM,WAEf5B,EAAa,IAAIlC,EAAA7C,EACrB+E,EAAW/B,IAAI,SAAW1F,EAAKK,KAAML,GACrCyH,EAAW/B,IAAI,SAAWjG,IAAIgH,QAAQzG,KAAKK,KAAMZ,IAAIgH,QAAQzG,MAE7DsJ,EAAA5G,EAAmBpE,UAAUmJ,WAAaA,EAE1C,IAAMtC,EAAY,IAAImE,EAAA5G,GAClB1C,KAAMP,IAAIgH,QAAQzG,KAClByH,WAAYA,EACZd,eAAgBc,IAQpB,OALAhI,IAAI8J,SAASC,KAAKrE,GAClB1F,IAAI8J,SAASV,OAEbQ,EAASI,QAAQtE,GAEVkE,EAASK,YAKrBpE,6CCtCfqE,GAAA,WACIvM,OAAAsL,EAAA,OAAAtL,CAAOwM,GAAAlH,EAAapE,UAAW,eAAgB,SAAUgH,GAAO,IAAAjG,EAAAC,KAC5DgG,EAAMI,IAAI,iBACNmE,GAAAnH,EAAOyC,WACHjF,SAAUT,IAAII,WAAWC,MAAM,0CAC/BgK,MAAOxK,KAAKU,KAAK+J,cAAcX,SAC/BY,SAAU,SAACrM,EAAOwH,GAAR,OAAsB9F,EAAK4K,gBAAgB,WAArB5K,CAAiC1B,EAAOwH,kDCPnE+E,mGACjB/D,KAAA,WACIgE,EAAA7L,UAAM6H,KAANtJ,KAAAyC,MAEAA,KAAK8K,SAAStN,EAAEgG,MAAMuH,MAAM,gBAGhCxD,QAAA,WACI,OACI/J,EAAA,OAAK8C,UAAU,uBACV0K,EAAA5H,EAAeyC,WACZoF,QACI7J,EAAC,SAAWpB,KAAKU,KAAK4C,WAArB,cACD4H,KAAM,iBAb0BC,GAAA/H,GCGxDgI,GAAA,WACSC,OAAOlL,IAAI2B,KAAK,uCAErB3B,IAAImL,OAAO,eAAiBC,KAAM,qBAAsB1F,UAAW+E,GAA2B/E,aAE9F/H,OAAAsL,EAAA,OAAAtL,CAAOqN,GAAA/H,EAASpE,UAAW,WAAY,SAAUgH,GAC7CA,EAAMI,IAAI,QACNoF,GAAApI,EAAWyC,WACPtC,KAAMpD,IAAIqD,MAAM,cAAeF,SAAUtD,KAAKU,KAAK4C,aACnD1C,SAAUT,IAAII,WAAWC,MAAM,mCAC/BkH,KAAM,eAEV,oEChBS+D,2FAQjBC,YAAA,SAAYC,GACR,IAAMC,EAAuBzL,IAAI0L,oBAEjC,GAAID,EACA,OAAOpO,EAAEuM,WAAWI,QAAQyB,GAAsBxB,QAGtD,IAAMa,EAASjL,KAAK8L,gBAKpB,OAJAb,EAAO7J,EAAI,eACX6J,EAAO1J,MAAQoK,UACfV,EAAOc,QAAUd,EAAOc,QAAQC,KAAK,KAE9B7L,IAAIc,MAAMC,KAAK,cAAe+J,OApBMD,EAAA5H,mFCa9B6I,mGAEjBpF,KAAA,WACIqF,EAAAlN,UAAM6H,KAANtJ,KAAAyC,MAKIG,IAAIgM,oBAAoB3D,EAAApF,IACxBpD,KAAKoM,eAAiBjM,IAAIgM,SAASjG,YAOnC/F,IAAIgM,oBAAoBE,IACxBlM,IAAIC,MAAMkM,sBAAwB,MAGtC,IAAMrB,EAASjL,KAAKiL,SAEhB9K,IAAIC,MAAMkM,uBAKVxO,OAAOyO,KAAKtB,GAAQuB,KAAK,SAAA7N,GACrB,GAAIwB,IAAIC,MAAMkM,sBAAsB7H,MAAMwG,OAAOtM,KAASsM,EAAOtM,GAE7D,OADAwB,IAAIC,MAAMkM,sBAAwB,MAC3B,IAKdnM,IAAIC,MAAMkM,wBACXnM,IAAIC,MAAMkM,sBAAwB,IAAIb,IAAuBR,YAGjE9K,IAAIsM,QAAQxK,KAAK,gBAAiByK,KAAK,eAEvC1M,KAAK2M,UAAY,gBAGrBC,SAAA,WAGIzM,IAAIC,MAAMyM,UAAY/I,EAAEgJ,QAAQD,eAGpChN,KAAA,WACI,OACIrC,EAAA,OAAK8C,UAAU,aACVN,KAAK+M,OACNvP,EAAA,OAAK8C,UAAU,aACX9C,EAAA,OAAK8C,UAAU,yBACX9C,EAAA,UAAKwP,KAAUhN,KAAKiN,eAAezI,aAEvChH,EAAA,OAAK8C,UAAU,mCACX9C,EAAA,OAAK8C,UAAU,qBACX9C,EAAA,MAAI8C,UAAU,0BAA0B0M,KAAUhN,KAAKkN,YAAY1I,YACnEhH,EAAA,MAAI8C,UAAU,4BAA4B0M,KAAUhN,KAAKmN,cAAc3I,aAE1ErE,IAAIC,MAAMgN,eAAeC,eAO9C5J,OAAA,SAAOG,EAAe0J,GAGlB,GAFApB,EAAAlN,UAAMyE,OAAN8J,MAAAvN,KAAgBwN,YAEZ5J,EAAJ,CAEA9F,OAAAsL,EAAA,OAAAtL,CAAOwP,EAAS,WAAY,kBAAMxJ,EAAE,QAAQ2J,IAAI,aAAc,MAE9DtN,IAAIuN,SAAS,IACbvN,IAAIwN,cAAc,GAKlB,IAAMC,EAAgBzN,IAAIC,MAAMyN,WAC1BA,EAAa1N,IAAIC,MAAMyN,WAAa7N,KAAK8D,EAAE,SAASgK,cACpDjB,EAAY1M,IAAIC,MAAMyM,UAE5B/I,EAAE,QAAQ2J,IAAI,aAAc3J,EAAEgJ,QAAQiB,SAAWF,GAKjD,IAAMG,EAAS,kBAAMlK,EAAEgJ,QAAQD,UAAUA,EAAYe,EAAgBC,IAOrE,GANAG,IACAC,WAAWD,EAAQ,GAKfhO,KAAKoM,eAAgB,CACrB,IAAM8B,EAAclO,KAAK8D,EAAL,gCAAuC9D,KAAKoM,eAAerL,KAA3D,MAEpB,GAAImN,EAAYjO,OAAQ,CACpB,IAAMkO,EAAWrK,EAAE,WAAWgK,cACxBM,EAActK,EAAEgJ,QAAQiB,SACxBM,EAAgBH,EAAYvC,SAAS2C,IACrCC,EAAmBF,EAAgBH,EAAYJ,eAEjDO,EAAgBxB,EAAYsB,GAAYI,EAAmB1B,EAAYuB,IACvEtK,EAAEgJ,QAAQD,UAAUwB,EAAgBF,SAWpDpB,KAAA,WACI,OAAOyB,GAAApL,EAAYyC,eAUvBoH,aAAA,WACI,IAAMjH,EAAQ,IAAIC,EAAA7C,EACZqL,EAAqBtO,IAAIkB,MAAMC,UAAU,wBAA0BnB,IAAIgH,QAAQzG,KAqBrF,OAnBAsF,EAAMI,IAAI,gBACNoB,EAAApE,EAAOyC,WACHjF,SAAUT,IAAII,WAAWC,MAAMiO,EAAqB,2CAA6C,mDACjG/G,KAAM,cACNpH,UAAW,iDACXoO,cAAe,qBACf/J,QAAS3E,KAAK2O,cAAc/P,KAAKoB,MACjCyH,UAAWgH,KAInBzI,EAAMI,IAAI,MACNwI,GAAAxL,EAAeyC,WACXjF,SAAUZ,KAAK6O,SAAS7O,MAAMwE,UAC9BsK,gBAAiB,SACjBxO,UAAW,sBAIZ0F,KASX6I,SAAA,WACI,IAAM7I,EAAQ,IAAIC,EAAA7C,EACZ6H,EAASjL,KAAK+O,eAWpB,OATA/I,EAAMI,IAAI,iBACNoF,GAAApI,EAAWyC,WACPtC,KAAMpD,IAAIqD,MAAM,QAASyH,GACzBrK,SAAUT,IAAII,WAAWC,MAAM,yCAC/BkH,KAAM,oBAEV,KAGG1B,KAUXkH,UAAA,WACI,IAAMlH,EAAQ,IAAIC,EAAA7C,EACZ4L,EAAU7O,IAAIC,MAAMgN,eAAe4B,UAEnCC,KACN,IAAK,IAAM7R,KAAK4R,EACZC,EAAY7R,GAAK+C,IAAII,WAAWC,MAAM,yBAA2BpD,EAAI,WAWzE,OARA4I,EAAMI,IAAI,OACN8I,GAAA9L,EAAOyC,WACHsJ,QAASF,EACT5Q,MAAO2B,KAAKiL,SAASC,MAAQpN,OAAOyO,KAAKyC,GAAS,GAClDtE,SAAU1K,KAAKoP,WAAWxQ,KAAKoB,SAIhCgG,KASXmH,YAAA,WACI,IAAMnH,EAAQ,IAAIC,EAAA7C,EAsBlB,OApBA4C,EAAMI,IAAI,UACNoB,EAAApE,EAAOyC,WACHxC,MAAOlD,IAAII,WAAWC,MAAM,oCAC5BkH,KAAM,iBACNpH,UAAW,sBACXqE,QAAS,kBAAMxE,IAAIC,MAAMgN,eAAeiC,cAI5ClP,IAAIgH,QAAQzG,MACZsF,EAAMI,IAAI,gBACNoB,EAAApE,EAAOyC,WACHxC,MAAOlD,IAAII,WAAWC,MAAM,6CAC5BkH,KAAM,eACNpH,UAAW,sBACXqE,QAAS3E,KAAKsP,cAAc1Q,KAAKoB,SAKtCgG,KAUXuJ,UAAA,WACI,OAAOvP,KAAKiL,SAAS7J,KASzBoO,YAAA,WACI,IAAMvE,EAASjL,KAAKiL,gBACbA,EAAO7J,EAEd5D,EAAEgG,MAAMrD,IAAIqD,MAAMxD,KAAKyE,MAAMgL,UAAWxE,OAQ5CmE,WAAA,SAAWlE,GACP,IAAMD,EAASjL,KAAKiL,SAEhBC,IAASpN,OAAOyO,KAAKpM,IAAIC,MAAMgN,eAAe4B,WAAW,UAClD/D,EAAOC,KAEdD,EAAOC,KAAOA,EAGlB1N,EAAEgG,MAAMrD,IAAIqD,MAAMxD,KAAKyE,MAAMgL,UAAWxE,OAQ5C8D,aAAA,WACI,OACI7D,KAAM1N,EAAEgG,MAAMuH,MAAM,QACpB3J,EAAG5D,EAAEgG,MAAMuH,MAAM,SASzBE,OAAA,WACI,IAAMA,EAASjL,KAAK+O,eAIpB,OAFA9D,EAAO9J,OAAS3D,EAAEgG,MAAMuH,MAAM,UAEvBE,KAQX0D,cAAA,WACI,IAAM5E,EAAWvM,EAAEuM,WAYnB,OAVI5J,IAAIgH,QAAQzG,KACZV,KAAK0P,qBAAqB3F,GAE1B5J,IAAIwI,MAAMY,KACN,IAAIoG,GAAAvM,GACAwM,QAAS5P,KAAK0P,qBAAqB9Q,KAAKoB,KAAM+J,MAKnDA,EAASK,WASpBsF,qBAAA,SAAqB3F,GACjB,IAAMlE,EAAY,IAAImE,EAAA5G,GAAoB1C,KAAMP,IAAIgH,QAAQzG,OAO5D,OALAP,IAAI8J,SAASC,KAAKrE,GAClB1F,IAAI8J,SAASV,OAEbQ,EAASI,QAAQtE,GAEVkE,EAASK,WAQpBkF,cAAA,WACyBO,QAAQ1P,IAAII,WAAWC,MAAM,oDAG9CL,IAAIgH,QAAQzG,KAAK2H,MAAMyH,SAAU,IAAIC,WA/VGC,GAAA5M,YCZ/B6M,0EACVC,UAAP,SAAiBzL,GAGb,SAAS0L,EAAKC,EAAOC,EAAOpP,GACxB,OAAOmP,EACFjP,OAAO,SAAAmP,GAAI,OAA6B,IAAzBD,EAAMvI,QAAQwI,KAC7B7P,IAAI,SAAAM,GAAE,OAAIZ,IAAIc,MAAMe,QAAQf,EAAOF,KAL5CwP,EAAML,UAAN3S,KAAAyC,KAAgByE,GAQhB,IAAM8C,EAAU9C,EAAM+L,KAAKjJ,UAG3B,GAAKA,EAAO,KAA6B,GAAlBA,EAAQtH,OAKxB,CACH,IAAIwQ,EAAaN,EAAK5I,EAAO,IAAP,MAAyBA,EAAO,IAAP,MAAyB,SACpEmJ,EAAeP,EAAK5I,EAAO,IAAP,MAAyBA,EAAO,IAAP,MAAyB,SACtEoJ,EAAcR,EAAK5I,EAAO,IAAP,OAA0BA,EAAO,IAAP,OAA0B,UACvEqJ,EAAgBT,EAAK5I,EAAO,IAAP,OAA0BA,EAAO,IAAP,OAA0B,UAE7E9C,EAAMoM,MAAQJ,EAAWK,OAAOH,GAChClM,EAAMsM,QAAUL,EAAaI,OAAOF,OAZI,CACxC,IAAMI,EAAgBvM,EAAM+L,KAAKjJ,UAAU,GACrC0J,EAAgBxM,EAAM+L,KAAKjJ,UAAU,GAC3C9C,EAAMoM,MAAQV,EAAKc,EAAeD,EAAe,SACjDvM,EAAMsM,QAAUZ,EAAKa,EAAeC,EAAe,sCAY3DvJ,KAAA,WACI,MAAO,gBAGXwJ,eAAA,WAEI,IAAIC,EAAa,4CAEjB,OAAInR,KAAKyE,MAAMoM,MAAM5Q,OACbD,KAAKyE,MAAMsM,QAAQ9Q,OACZkR,EAAa,oBAGjBA,EAAa,QAGjBA,EAAa,aAGxBC,gBAAA,WACI,IAAMtP,KAUN,OARI9B,KAAKyE,MAAMoM,MAAM5Q,SACjB6B,EAAK+O,MAAQ3H,EAAgBlJ,KAAKyE,MAAMoM,OAAQ5N,MAAM,KAGtDjD,KAAKyE,MAAMsM,QAAQ9Q,SACnB6B,EAAKiP,QAAU7H,EAAgBlJ,KAAKyE,MAAMsM,SAAU9N,MAAM,KAGvDnB,cA3DiCsB,GCWhDjD,IAAIkR,aAAajL,IAAI,YAAa,SAASjG,GACvCA,EAAImL,OAAOgG,qBAAuB/F,KAAM,uBAAwB1F,UAAWoG,GAAuBpG,aAElG4D,EAAArG,EAAWpE,UAAUqI,eAAiBkK,EAAAnO,EAAMoO,QAAQ,kBACpD/H,EAAArG,EAAWpE,UAAUyS,kBAAoBF,EAAAnO,EAAMoO,QAAQ,qBACvD/H,EAAArG,EAAWpE,UAAUsI,gBAAkBiK,EAAAnO,EAAMoO,QAAQ,mBACrD/H,EAAArG,EAAWpE,UAAU0S,mBAAqBH,EAAAnO,EAAMoO,QAAQ,sBAExD/H,EAAArG,EAAWpE,UAAUsK,kBAAoBiI,EAAAnO,EAAM9B,UAAU,qBACzDmI,EAAArG,EAAWpE,UAAUmH,sBAAwBoL,EAAAnO,EAAM9B,UAAU,yBAC7DmI,EAAArG,EAAWpE,UAAUqH,uBAAyBkL,EAAAnO,EAAM9B,UAAU,0BAC9DmI,EAAArG,EAAWpE,UAAUqH,uBAAyBkL,EAAAnO,EAAM9B,UAAU,0BAE9D6B,EAAAC,EAAKpE,UAAU8K,SAAWyH,EAAAnO,EAAM9B,UAAU,YAE1CnB,EAAIwR,eAAeC,mBAAqB3B,GZrB5C,SAAyB9P,GAErB6J,EAAA5G,EAAmBpE,UAAUmJ,WAAa,IAAIlC,EAAA7C,EAC9C4G,EAAA5G,EAAmBpE,UAAUqI,kBAC7B2C,EAAA5G,EAAmBpE,UAAUsI,mBAG7B0C,EAAA5G,EAAmBpE,UAAU6S,iBAAmB,WAAY,IAAA9R,EAAAC,KACxDG,EAAIwI,MAAMY,KACN,IAAI3C,GACAK,mBAAoBjH,KAAKmI,WACzBF,SAAU,SAACE,GACPpI,EAAKoI,WAAaA,EAGlBpI,EAAK+D,EAAE,oBAAoBK,aAQ3CrG,OAAAsL,EAAA,OAAAtL,CAAOkM,EAAA5G,EAAmBpE,UAAW,cAAe,SAAUgH,GAC1D,GAAI7F,EAAIgH,QAAQzG,MAAQP,EAAIkB,MAAMC,UAAU,6BAA8B,CAEtE,IAAM6G,EAAanI,KAAKmI,WAAW3D,UAEnCwB,EAAMI,IAAI,aACN5I,EAAA,KAAG8C,UAAU,sCACVqE,QAAS3E,KAAK6R,iBAAiBjT,KAAKoB,OAClCmI,EAAWlI,OACN8I,EAAoBZ,EAAWlI,QAC/BzC,EAAA,QAAM8C,UAAU,uBAAuBH,EAAII,WAAWC,MAAM,4CAEvE,MAKX1C,OAAAsL,EAAA,OAAAtL,CAAOkM,EAAA5G,EAAmBpE,UAAW,OAAQ,SAAU8C,GACnD,IAAMgQ,KACAC,KACN/R,KAAKmI,WAAW3D,UAAU4D,QAAQ,SAAAvF,GAE1BA,aAAqBM,EAAAC,GACrB0O,EAAM7P,KAAKY,GAGXA,aAAqBa,EAAAN,GACrB2O,EAAO9P,KAAKY,KAIpBf,EAAKwG,cAAgBxG,EAAKwG,kBAEtBwJ,EAAM7R,SACN6B,EAAKwG,cAAcjB,eAAiByK,GAGpCC,EAAO9R,SACP6B,EAAKwG,cAAchB,gBAAkByK,KYtC7CC,CAAqB7R,GVxBzB,WAEI,IAAM8R,EAAkB,SAAS/L,EAAYF,EAAOkM,GAChD,IAAI/J,KAEAjC,EAAWmB,iBAAiBpH,SAC5BkI,EAAaA,EAAW2I,OAAO5K,EAAWmB,mBAG1CnB,EAAWoB,kBAAkBrH,SAC7BkI,EAAaA,EAAW2I,OAAO5K,EAAWoB,oBAG1Ca,GAAcA,EAAWlI,SACrBiS,EACAlM,EAAMI,IAAI,aAAc8C,EAAgBf,GAAa,IAErDnC,EAAMI,IAAI,aAAc8C,EAAgBf,GAAalF,MAAM,IAAQ,KAQ/EnF,OAAAsL,EAAA,OAAAtL,CAAOqU,EAAA/O,EAAmBpE,UAAW,YAAa,SAASgH,GACvD,IAAME,EAAalG,KAAKyE,MAAMyB,WAE9B+L,EAAgB/L,EAAYF,GAAO,KAMvClI,OAAAsL,EAAA,OAAAtL,CAAO0K,EAAApF,EAAepE,UAAW,SAAU,SAASiM,GAChDA,EAAOc,QAAQ9J,KAAK,kBACpBgJ,EAAOc,QAAQ9J,KAAK,qBAExBnE,OAAAsL,EAAA,OAAAtL,CAAOkN,EAAA5H,EAAepE,UAAW,gBAAiB,SAASiM,GACvDA,EAAOc,QAAQ9J,KAAK,kBACpBgJ,EAAOc,QAAQ9J,KAAK,qBAOxBnE,OAAAsL,EAAA,OAAAtL,CAAOsU,EAAAhP,EAAepE,UAAW,QAAS,SAASgH,GAC/C,IAAME,EAAalG,KAAKyE,MAAMyB,WAE9B+L,EAAgB/L,EAAYF,GAAO,KUzBvCqM,GACAlJ,KACAK,KACAa,KAEAT,KAEAwB,uBCvCJjO,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,mCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,iCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,8CCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,gDCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,4CCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,2CCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,mCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,qCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,0CCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,kCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,+BCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,yCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,wCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,4CCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['models/Group'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/classList'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import highlight from 'flarum/helpers/highlight';\r\nimport avatar from 'flarum/helpers/avatar';\r\nimport username from 'flarum/helpers/username';\r\n\r\nexport default class UserSearchSource {\r\n    view(query) {\r\n        if (!query || query.length < 3 || this.loading) return;\r\n\r\n        if (!app.cache.byobuResults) {\r\n            app.cache.byobuResults = [];\r\n        }\r\n\r\n        this.query = query;\r\n\r\n        if (!app.cache.byobuResults[this.query]) {\r\n\r\n            this.loading = true;\r\n\r\n            app.cache.byobuResults[this.query] = [];\r\n            app.store.find('users', {\r\n                filter: {q: this.query + ' allows-pd' + (app.forum.attribute('byobu-extend') ? ' byobu-extend' : '')},\r\n                page: {limit: 5}\r\n            }).then(this.pushResults.bind(this));\r\n        } else\r\n\r\n            return [\r\n                <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\r\n                app.cache.byobuResults[this.query].map(user => {\r\n                    const name = username(user);\r\n                    name.children[0] = highlight(name.children[0], this.query);\r\n\r\n                    return (\r\n                        <li className='SearchResult' data-index={'users:' + user.id()}>\r\n                            <a data-index={'users:' + user.id()}>\r\n                                {avatar(user)}\r\n                                {name}\r\n                            </a>\r\n                        </li>\r\n                    );\r\n                })\r\n            ];\r\n    }\r\n\r\n    pushResults(results) {\r\n        results.payload.data.map(result => {\r\n            var user = app.store.getById('users', result.id);\r\n            app.cache.byobuResults[this.query].push(user);\r\n        });\r\n        this.loading = false;\r\n        m.redraw();\r\n    }\r\n}\r\n","import highlight from 'flarum/helpers/highlight';\r\n\r\nexport default class GroupSearchSource {\r\n    search(query) {\r\n        return app.store.find('groups', {\r\n            filter: {q: query},\r\n            page: {limit: 5}\r\n        });\r\n    }\r\n\r\n    view(query) {\r\n        query = query.toLowerCase();\r\n\r\n        const results = app.store.all('groups')\r\n            .filter(group => group.namePlural().toLowerCase().substr(0, query.length) === query);\r\n\r\n        if (!results.length) return '';\r\n\r\n        return [\r\n            <li className=\"Dropdown-header\">{app.translator.trans('fof-byobu.forum.search.headings.groups')}</li>,\r\n            results.map(group => {\r\n                const groupName = group.namePlural();\r\n                var name = highlight(groupName, query);\r\n\r\n                return (\r\n                    <li className=\"SearchResult\" data-index={'groups:' + group.id()}>\r\n                        <a data-index={'groups:' + group.id()}>\r\n                            <span class=\"groupName\">{name}</span>\r\n                        </a>\r\n                    </li>\r\n                );\r\n            })\r\n        ];\r\n    }\r\n}\r\n","import extract from 'flarum/utils/extract';\r\nimport username from 'flarum/helpers/username';\r\nimport User from 'flarum/models/User';\r\nimport Group from 'flarum/models/Group';\r\n\r\nexport default function recipientLabel(recipient, attrs = {}) {\r\n  attrs.style = attrs.style || {};\r\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\r\n\r\n  const link = extract(attrs, 'link');\r\n\r\n  var label;\r\n\r\n  if (recipient instanceof User) {\r\n      label = username(recipient);\r\n\r\n      if (link) {\r\n          attrs.title = recipient.username() || '';\r\n          attrs.href = app.route.user(recipient);\r\n          attrs.config = m.route;\r\n      }\r\n  } else if (recipient instanceof Group) {\r\n      label = recipient.namePlural();\r\n  } else {\r\n      attrs.className += ' none';\r\n      label = app.translator.trans('fof-byobu.forum.labels.user_deleted');\r\n  }\r\n\r\n  return (\r\n    m((link ? 'a' : 'span'), attrs,\r\n        <span className=\"RecipientLabel-text\">\r\n            {label}\r\n        </span>\r\n    )\r\n  );\r\n}\r\n","import Search from \"flarum/components/Search\";\r\nimport UserSearchSource from \"./sources/UserSearchSource\";\r\nimport GroupSearchSource from \"./sources/GroupSearchSource\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\nimport classList from \"flarum/utils/classList\";\r\nimport extractText from \"flarum/utils/extractText\";\r\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\r\nimport recipientLabel from \"../../common/helpers/recipientLabel\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\n\r\nexport default class RecipientSearch extends Search {\r\n\r\n    config(isInitialized) {\r\n        if (isInitialized) return;\r\n\r\n        const $search = this;\r\n\r\n        this.$('.Search-results').on('click', (e) => {\r\n            const target = this.$('.SearchResult.active')\r\n\r\n            $search.addRecipient(target.data('index'));\r\n            $search.$('.RecipientsInput').focus();\r\n        });\r\n\r\n        this.$('.Search-results').on('touchstart', (e) => {\r\n            const target = this.$(e.target.parentNode);\r\n\r\n            $search.addRecipient(target.data('index'));\r\n            $search.$('.RecipientsInput').focus();\r\n        });\r\n\r\n        super.config(isInitialized);\r\n    }\r\n\r\n    view() {\r\n        if (typeof this.value() === 'undefined') {\r\n            this.value('');\r\n        }\r\n\r\n        const loading = this.value() && this.value().length >= 3;\r\n\r\n        if (!this.sources) {\r\n            this.sources = this.sourceItems().toArray();\r\n        }\r\n\r\n        return m('div', {\r\n            className: 'AddRecipientModal-form-input'\r\n        }, [\r\n            m('div', {\r\n                className: 'RecipientsInput-selected RecipientsLabel'\r\n            }, this.props.selected().toArray().map(recipient =>\r\n                recipientLabel(recipient, {\r\n                    onclick: () => {\r\n                        this.removeRecipient(recipient);\r\n                    }\r\n                })\r\n            )),\r\n            m('input', {\r\n                className: 'RecipientsInput FormControl ' + classList({\r\n                    open: !!this.value(),\r\n                    focused: !!this.value(),\r\n                    active: !!this.value(),\r\n                    loading: !!this.loadingSources\r\n                }),\r\n                config: function (element) {\r\n                    element.focus();\r\n                },\r\n                type: 'search',\r\n                placeholder: extractText(app.translator.trans('fof-byobu.forum.input.search_recipients')),\r\n                value: this.value(),\r\n                oninput: m.withAttr('value', this.value),\r\n                onfocus: () => this.hasFocus = true,\r\n                onblur: () => this.hasFocus = false\r\n            }),\r\n            m('ul', {\r\n                className: 'Dropdown-menu Search-results fade ' + classList({\r\n                    in: !!loading\r\n                })\r\n            }, this.loadingSources\r\n                ? LoadingIndicator.component({size: 'tiny', className: 'Button Button--icon Button--link'})\r\n                : this.sources.map(source => source.view(this.value()))\r\n            )\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Build an item list of SearchSources.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    sourceItems() {\r\n        const items = new ItemList();\r\n\r\n        // Add user source based on permissions.\r\n        if (\r\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithUsers')) ||\r\n            (this.props.discussion && this.props.discussion.canEditUserRecipients())\r\n        ) {\r\n            items.add('users', new UserSearchSource());\r\n        }\r\n\r\n        // Add group source based on permissions.\r\n        if (\r\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithGroups')) ||\r\n            (this.props.discussion && this.props.discussion.canEditGroupRecipients())\r\n        ) {\r\n            items.add('groups', new GroupSearchSource());\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n\r\n    /**\r\n     * Clear the search input and the current controller's active search.\r\n     */\r\n    clear() {\r\n        this.value('');\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    /**\r\n     * Adds a recipient.\r\n     *\r\n     * @param value\r\n     */\r\n    addRecipient(value) {\r\n\r\n        let values = value.split(':'),\r\n            type = values[0],\r\n            id = values[1];\r\n\r\n        let recipient = this.findRecipient(type, id);\r\n\r\n        this.props.selected().add(value, recipient);\r\n\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * Removes a recipient.\r\n     *\r\n     * @param recipient\r\n     */\r\n    removeRecipient(recipient) {\r\n        let type;\r\n\r\n        if (recipient instanceof User) {\r\n            type = 'users';\r\n        }\r\n        if (recipient instanceof Group) {\r\n            type = 'groups';\r\n        }\r\n\r\n        this.props.selected().remove(type + \":\" + recipient.id());\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    /**\r\n     * Loads a recipient from the global store.\r\n     *\r\n     * @param store\r\n     * @param id\r\n     * @returns {Model}\r\n     */\r\n    findRecipient(store, id) {\r\n        return app.store.getById(store, id);\r\n    }\r\n}\r\n","import Modal from \"flarum/components/Modal\";\r\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\r\nimport Button from \"flarum/components/Button\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\nimport RecipientSearch from \"./RecipientSearch\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\n\r\nexport default class AddRecipientModal extends Modal {\r\n    init() {\r\n        super.init();\r\n\r\n        this.selected = m.prop(new ItemList);\r\n\r\n        if (this.props.discussion) {\r\n            // Adds recipients of the currently viewed discussion.\r\n            this.assignInitialRecipients(this.props.discussion);\r\n        } else if (this.props.selectedRecipients.toArray().length > 0) {\r\n            // Adds previously selected recipients.\r\n            this.selected().merge(this.props.selectedRecipients);\r\n        } else {\r\n            // Adds the current user in case there are no selected recipients yet and this is a new discussion.\r\n            this.selected().add(\"users:\" + app.session.user.id(), app.session.user);\r\n        }\r\n\r\n        this.recipientSearch = RecipientSearch.component({\r\n            selected: this.selected,\r\n            discussion: this.props.discussion\r\n        });\r\n    }\r\n\r\n    assignInitialRecipients(discussion) {\r\n        discussion.recipientUsers().map(user => {\r\n            this.selected().add(\"users:\" + user.id(), user);\r\n        });\r\n        discussion.recipientGroups().map(group => {\r\n            this.selected().add(\"groups:\" + group.id(), group);\r\n        });\r\n    }\r\n\r\n    className() {\r\n        return 'AddRecipientModal';\r\n    }\r\n\r\n    title() {\r\n        return this.props.discussion\r\n            ? app.translator.trans('fof-byobu.forum.modal.titles.update_recipients', {title: <em>{this.props.discussion.title()}</em>})\r\n            : app.translator.trans('fof-byobu.forum.modal.titles.add_recipients');\r\n    }\r\n\r\n    content() {\r\n\r\n        return [\r\n            <div className=\"Modal-body\">\r\n                <div className=\"AddRecipientModal-form\">\r\n                    {this.recipientSearch}\r\n                    <div className=\"AddRecipientModal-form-submit App-primaryControl\">\r\n                        {Button.component({\r\n                            type: 'submit',\r\n                            className: 'Button Button--primary',\r\n                            disabled: false,\r\n                            icon: 'fas fa-check',\r\n                            children: app.translator.trans('fof-byobu.forum.buttons.submit')\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ];\r\n    }\r\n\r\n    select(e) {\r\n        // Ctrl + Enter submits the selection, just Enter completes the current entry\r\n        if (e.metaKey || e.ctrlKey || this.selected.indexOf(this.index) !== -1) {\r\n            if (this.selected().length) {\r\n                this.$('form').submit();\r\n            }\r\n        }\r\n    }\r\n\r\n    onsubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const discussion = this.props.discussion;\r\n        const recipients = this.selected();\r\n\r\n        let recipientGroups = [];\r\n        let recipientUsers = [];\r\n\r\n        recipients.toArray().forEach(recipient => {\r\n            if (recipient instanceof User) {\r\n                recipientUsers.push(recipient);\r\n            }\r\n            if (recipient instanceof Group) {\r\n                recipientGroups.push(recipient);\r\n            }\r\n        });\r\n\r\n        // Recipients are updated here for existing discussions here.\r\n        if (discussion) {\r\n            discussion.save({relationships: {recipientUsers, recipientGroups}})\r\n                .then(() => {\r\n                    if (app.current instanceof DiscussionPage) {\r\n                        app.current.stream.update();\r\n                    }\r\n                    m.redraw();\r\n                });\r\n        }\r\n\r\n        // Use the onsubmit callback to trigger an update in the DiscussionComposer\r\n        if (this.props.onsubmit) this.props.onsubmit(recipients);\r\n\r\n        app.modal.close();\r\n\r\n        m.redraw.strategy('none');\r\n    }\r\n}\r\n","export default function recipientCountLabel(count, attrs = {}) {\r\n  attrs.style = attrs.style || {};\r\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\r\n\r\n  var label = app.translator.transChoice('fof-byobu.forum.labels.recipients', count, {count});\r\n\r\n  return (\r\n    m('span', attrs,\r\n        <span className=\"RecipientLabel-text\">\r\n            {label}\r\n        </span>\r\n    )\r\n  );\r\n}\r\n","import {extend, override} from \"flarum/extend\";\r\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\r\nimport AddRecipientModal from \"./components/AddRecipientModal\";\r\nimport recipientCountLabel from \"../common/helpers/recipientCountLabel\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\n\r\nexport default function (app) {\r\n    // Add recipient-selection abilities to the discussion composer.\r\n    DiscussionComposer.prototype.recipients = new ItemList;\r\n    DiscussionComposer.prototype.recipientUsers = [];\r\n    DiscussionComposer.prototype.recipientGroups = [];\r\n\r\n    // Add a recipient selection modal when clicking the recipient tag label.\r\n    DiscussionComposer.prototype.chooseRecipients = function () {\r\n        app.modal.show(\r\n            new AddRecipientModal({\r\n                selectedRecipients: this.recipients,\r\n                onsubmit: (recipients) => {\r\n                    this.recipients = recipients;\r\n\r\n                    // Focus on recipient autocomplete field.\r\n                    this.$('.RecipientsInput').focus();\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    // Add a tag-selection menu to the discussion composer's header, after the\r\n    // title.\r\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\r\n        if (app.session.user && app.forum.attribute('canStartPrivateDiscussion')) {\r\n\r\n            const recipients = this.recipients.toArray();\r\n\r\n            items.add('recipients', (\r\n                <a className=\"DiscussionComposer-changeRecipients\"\r\n                   onclick={this.chooseRecipients.bind(this)}>\r\n                    {recipients.length\r\n                        ? recipientCountLabel(recipients.length)\r\n                        : <span className=\"RecipientLabel none\">{app.translator.trans('fof-byobu.forum.buttons.add_recipients')}</span>}\r\n                </a>\r\n            ), 5);\r\n        }\r\n    });\r\n\r\n    // Add the selected tags as data to submit to the server.\r\n    extend(DiscussionComposer.prototype, 'data', function (data) {\r\n        const users = [];\r\n        const groups = [];\r\n        this.recipients.toArray().forEach(recipient => {\r\n\r\n            if (recipient instanceof User) {\r\n                users.push(recipient);\r\n            }\r\n\r\n            if (recipient instanceof Group) {\r\n                groups.push(recipient);\r\n            }\r\n        });\r\n\r\n        data.relationships = data.relationships || {};\r\n\r\n        if (users.length) {\r\n            data.relationships.recipientUsers = users;\r\n        }\r\n\r\n        if (groups.length) {\r\n            data.relationships.recipientGroups = groups;\r\n        }\r\n    });\r\n}\r\n","import extract from 'flarum/utils/extract';\r\nimport recipientLabel from './recipientLabel';\r\n\r\nexport default function recipientsLabel(recipients, attrs = {}) {\r\n  const children = [];\r\n  const link = extract(attrs, 'link');\r\n\r\n  attrs.className = 'RecipientsLabel ' + (attrs.className || '');\r\n\r\n  if (recipients) {\r\n      recipients.forEach(recipient => {\r\n          children.push(recipientLabel(recipient, {link}));\r\n      });\r\n  } else {\r\n    children.push(recipientLabel());\r\n  }\r\n\r\n  return <span {...attrs}>{children}</span>;\r\n}\r\n","import {extend} from \"flarum/extend\";\r\nimport DiscussionListItem from \"flarum/components/DiscussionListItem\";\r\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\r\nimport DiscussionHero from \"flarum/components/DiscussionHero\";\r\nimport DiscussionList from \"flarum/components/DiscussionList\";\r\nimport recipientsLabel from \"../common/helpers/recipientsLabel\";\r\n\r\nexport default function() {\r\n\r\n    const addToDiscussion = function(discussion, items, long) {\r\n        let recipients = [];\r\n\r\n        if (discussion.recipientUsers().length) {\r\n            recipients = recipients.concat(discussion.recipientUsers());\r\n        }\r\n\r\n        if (discussion.recipientGroups().length) {\r\n            recipients = recipients.concat(discussion.recipientGroups());\r\n        }\r\n\r\n        if (recipients && recipients.length) {\r\n            if (long) {\r\n                items.add('recipients', recipientsLabel(recipients), 10);\r\n            } else {\r\n                items.add('recipients', recipientsLabel(recipients, {link: true}), 4);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds User labels on the discussion index page.\r\n     */\r\n    extend(DiscussionListItem.prototype, 'infoItems', function(items) {\r\n        const discussion = this.props.discussion;\r\n\r\n        addToDiscussion(discussion, items, true);\r\n    });\r\n\r\n    /**\r\n     * Require recipients from the API whenever we're loading a Discussion page.\r\n     */\r\n    extend(DiscussionPage.prototype, 'params', function(params) {\r\n        params.include.push('recipientUsers');\r\n        params.include.push('recipientGroups');\r\n    });\r\n    extend(DiscussionList.prototype, 'requestParams', function(params) {\r\n        params.include.push('recipientUsers');\r\n        params.include.push('recipientGroups');\r\n    });\r\n\r\n\r\n    /**\r\n     * Adds User labels on the discussion Hero.\r\n     */\r\n    extend(DiscussionHero.prototype, 'items', function(items) {\r\n        const discussion = this.props.discussion;\r\n\r\n        addToDiscussion(discussion, items, false);\r\n    });\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport Button from 'flarum/components/Button';\r\n\r\nimport AddRecipientModal from './components/AddRecipientModal';\r\n\r\nexport default function() {\r\n    // Add a control allowing the discussion to be moved to another category.\r\n    extend(DiscussionControls, 'moderationControls', function(items, discussion) {\r\n        if (discussion.canEditRecipients()) {\r\n            items.add('recipients', Button.component({\r\n                children: app.translator.trans('fof-byobu.forum.buttons.edit_recipients'),\r\n                icon: 'far fa-map',\r\n                onclick: () => app.modal.show(new AddRecipientModal({discussion}))\r\n            }));\r\n        }\r\n    });\r\n}\r\n","import {extend} from \"flarum/extend\";\r\nimport Discussion from \"flarum/models/Discussion\";\r\nimport Badge from \"flarum/components/Badge\";\r\n\r\nexport default function addHasRecipientsBadge() {\r\n    extend(Discussion.prototype, 'badges', function (badges) {\r\n        if (this.recipientUsers().length || this.recipientGroups().length) {\r\n            badges.add('private', Badge.component({\r\n                type: 'private',\r\n                label: app.translator.trans('fof-byobu.forum.badges.is_private.tooltip'),\r\n                icon: 'fas fa-map'\r\n            }), 10);\r\n        }\r\n    });\r\n}\r\n","import {extend} from 'flarum/extend';\r\nimport UserControls from 'flarum/utils/UserControls';\r\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\r\nimport Button from 'flarum/components/Button';\r\nimport ItemList from 'flarum/utils/ItemList';\r\n\r\nexport default function () {\r\n    // Add a control allowing the discussion to be moved to another category.\r\n    extend(UserControls, 'userControls', function (items, user) {\r\n        if (app.session.user &&\r\n            app.session.user.id() !== user.id() &&\r\n            app.forum.attribute('canStartPrivateDiscussion') &&\r\n            (user.blocksPd() === 0 || app.forum.attribute('canStartPrivateDiscussionWithBlockers'))\r\n        ) {\r\n            items.add('private-discussion', Button.component({\r\n                children: app.translator.trans('fof-byobu.forum.buttons.send_pd', {username: user.username()}),\r\n                icon: 'far fa-map',\r\n                onclick: () => {\r\n                    const deferred = m.deferred();\r\n\r\n                    let recipients = new ItemList();\r\n                    recipients.add('users:' + user.id(), user);\r\n                    recipients.add('users:' + app.session.user.id(), app.session.user);\r\n\r\n                    DiscussionComposer.prototype.recipients = recipients;\r\n\r\n                    const component = new DiscussionComposer({\r\n                        user: app.session.user,\r\n                        recipients: recipients,\r\n                        recipientUsers: recipients\r\n                    });\r\n\r\n                    app.composer.load(component);\r\n                    app.composer.show();\r\n\r\n                    deferred.resolve(component);\r\n\r\n                    return deferred.promise;\r\n                }\r\n            }));\r\n        }\r\n\r\n        return items;\r\n    });\r\n}\r\n","import {extend} from 'flarum/extend';\r\nimport SettingsPage from 'flarum/components/SettingsPage';\r\nimport Switch from \"flarum/components/Switch\";\r\n\r\nexport default function () {\r\n    extend(SettingsPage.prototype, 'privacyItems', function (items) {\r\n        items.add('byobu-block-dm',\r\n            Switch.component({\r\n                children: app.translator.trans('fof-byobu.forum.user.settings.block_pd'),\r\n                state: this.user.preferences().blocksPd,\r\n                onchange: (value, component) => this.preferenceSaver('blocksPd')(value, component)\r\n            })\r\n        )\r\n    });\r\n}\r\n","import UserPage from 'flarum/components/UserPage';\r\nimport DiscussionList from 'flarum/components/DiscussionList';\r\n\r\nexport default class PrivateDiscussionsUserPage extends UserPage {\r\n    init() {\r\n        super.init();\r\n\r\n        this.loadUser(m.route.param('username'));\r\n    }\r\n\r\n    content() {\r\n        return (\r\n            <div className=\"DiscussionsUserPage\">\r\n                {DiscussionList.component({\r\n                    params: {\r\n                        q: `byobu:${this.user.username()} is:private`,\r\n                        sort: 'newest'\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {extend} from 'flarum/extend';\r\nimport UserPage from 'flarum/components/UserPage';\r\nimport LinkButton from 'flarum/components/LinkButton';\r\n\r\nimport PrivateDiscussionsUserPage from \"./components/PrivateDiscussionsUserPage\";\r\n\r\nexport default function () {\r\n    if (!Number(app.data['fof-byobu.enable_byobu_user_page'])) return;\r\n\r\n    app.routes['user.byobu'] = {path: '/u/:username/byobu', component: PrivateDiscussionsUserPage.component()};\r\n\r\n    extend(UserPage.prototype, 'navItems', function (items) {\r\n        items.add('byobu',\r\n            LinkButton.component({\r\n                href: app.route('user.byobu', {username: this.user.username()}),\r\n                children: app.translator.trans('fof-byobu.forum.user.byobu_link'),\r\n                icon: 'fas fa-map'\r\n            }),\r\n            85\r\n        );\r\n    })\r\n}\r\n","import DiscussionList from 'flarum/components/DiscussionList';\r\n\r\nexport default class PrivateDiscussionList extends DiscussionList\r\n{\r\n    /**\r\n     * Load a new page of discussion results.\r\n     *\r\n     * @param {Integer} offset The index to start the page at.\r\n     * @return {Promise}\r\n     */\r\n    loadResults(offset) {\r\n        const preloadedDiscussions = app.preloadedDocument();\r\n\r\n        if (preloadedDiscussions) {\r\n            return m.deferred().resolve(preloadedDiscussions).promise;\r\n        }\r\n\r\n        const params = this.requestParams();\r\n        params.q = 'q=is:private';\r\n        params.page = {offset};\r\n        params.include = params.include.join(',');\r\n\r\n        return app.store.find('discussions', params);\r\n    }\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport Page from 'flarum/components/Page';\r\nimport ItemList from 'flarum/utils/ItemList';\r\nimport listItems from 'flarum/helpers/listItems';\r\nimport icon from 'flarum/helpers/icon';\r\nimport PrivateDiscussionList from './PrivateDiscussionList';\r\nimport WelcomeHero from 'flarum/components/WelcomeHero';\r\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\r\nimport LogInModal from 'flarum/components/LogInModal';\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\nimport Select from 'flarum/components/Select';\r\nimport Button from 'flarum/components/Button';\r\nimport LinkButton from 'flarum/components/LinkButton';\r\nimport SelectDropdown from 'flarum/components/SelectDropdown';\r\n\r\nexport default class PrivateDiscussionIndex extends Page\r\n{\r\n    init() {\r\n        super.init();\r\n\r\n        // If the user is returning from a discussion page, then take note of which\r\n        // discussion they have just visited. After the view is rendered, we will\r\n        // scroll down so that this discussion is in view.\r\n        if (app.previous instanceof DiscussionPage) {\r\n            this.lastDiscussion = app.previous.discussion;\r\n        }\r\n\r\n        // If the user is coming from the discussion list, then they have either\r\n        // just switched one of the parameters (filter, sort, search) or they\r\n        // probably want to refresh the results. We will clear the discussion list\r\n        // cache so that results are reloaded.\r\n        if (app.previous instanceof PrivateDiscussionIndex) {\r\n            app.cache.privateDiscussionList = null;\r\n        }\r\n\r\n        const params = this.params();\r\n\r\n        if (app.cache.privateDiscussionList) {\r\n            // Compare the requested parameters (sort, search query) to the ones that\r\n            // are currently present in the cached discussion list. If they differ, we\r\n            // will clear the cache and set up a new discussion list component with\r\n            // the new parameters.\r\n            Object.keys(params).some(key => {\r\n                if (app.cache.privateDiscussionList.props.params[key] !== params[key]) {\r\n                    app.cache.privateDiscussionList = null;\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!app.cache.privateDiscussionList) {\r\n            app.cache.privateDiscussionList = new PrivateDiscussionList({params});\r\n        }\r\n\r\n        app.history.push('private-index', icon('far fa-map'));\r\n\r\n        this.bodyClass = 'App--index';\r\n    }\r\n\r\n    onunload() {\r\n        // Save the scroll position so we can restore it when we return to the\r\n        // discussion list.\r\n        app.cache.scrollTop = $(window).scrollTop();\r\n    }\r\n\r\n    view() {\r\n        return (\r\n            <div className=\"IndexPage\">\r\n                {this.hero()}\r\n                <div className=\"container\">\r\n                    <nav className=\"IndexPage-nav sideNav\">\r\n                        <ul>{listItems(this.sidebarItems().toArray())}</ul>\r\n                    </nav>\r\n                    <div className=\"IndexPage-results sideNavOffset\">\r\n                        <div className=\"IndexPage-toolbar\">\r\n                            <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\r\n                            <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\r\n                        </div>\r\n                        {app.cache.discussionList.render()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    config(isInitialized, context) {\r\n        super.config(...arguments);\r\n\r\n        if (isInitialized) return;\r\n\r\n        extend(context, 'onunload', () => $('#app').css('min-height', ''));\r\n\r\n        app.setTitle('');\r\n        app.setTitleCount(0);\r\n\r\n        // Work out the difference between the height of this hero and that of the\r\n        // previous hero. Maintain the same scroll position relative to the bottom\r\n        // of the hero so that the sidebar doesn't jump around.\r\n        const oldHeroHeight = app.cache.heroHeight;\r\n        const heroHeight = app.cache.heroHeight = this.$('.Hero').outerHeight();\r\n        const scrollTop = app.cache.scrollTop;\r\n\r\n        $('#app').css('min-height', $(window).height() + heroHeight);\r\n\r\n        // Scroll to the remembered position. We do this after a short delay so that\r\n        // it happens after the browser has done its own \"back button\" scrolling,\r\n        // which isn't right. https://github.com/flarum/core/issues/835\r\n        const scroll = () => $(window).scrollTop(scrollTop - oldHeroHeight + heroHeight);\r\n        scroll();\r\n        setTimeout(scroll, 1);\r\n\r\n        // If we've just returned from a discussion page, then the constructor will\r\n        // have set the `lastDiscussion` property. If this is the case, we want to\r\n        // scroll down to that discussion so that it's in view.\r\n        if (this.lastDiscussion) {\r\n            const $discussion = this.$(`.DiscussionListItem[data-id=\"${this.lastDiscussion.id()}\"]`);\r\n\r\n            if ($discussion.length) {\r\n                const indexTop = $('#header').outerHeight();\r\n                const indexBottom = $(window).height();\r\n                const discussionTop = $discussion.offset().top;\r\n                const discussionBottom = discussionTop + $discussion.outerHeight();\r\n\r\n                if (discussionTop < scrollTop + indexTop || discussionBottom > scrollTop + indexBottom) {\r\n                    $(window).scrollTop(discussionTop - indexTop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the component to display as the hero.\r\n     *\r\n     * @return {MithrilComponent}\r\n     */\r\n    hero() {\r\n        return WelcomeHero.component();\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the sidebar of the index page. By default this is a\r\n     * \"New Discussion\" button, and then a DropdownSelect component containing a\r\n     * list of navigation items.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    sidebarItems() {\r\n        const items = new ItemList();\r\n        const canStartDiscussion = app.forum.attribute('canStartDiscussion') || !app.session.user;\r\n\r\n        items.add('newDiscussion',\r\n            Button.component({\r\n                children: app.translator.trans(canStartDiscussion ? 'core.forum.index.start_discussion_button' : 'core.forum.index.cannot_start_discussion_button'),\r\n                icon: 'fas fa-edit',\r\n                className: 'Button Button--primary IndexPage-newDiscussion',\r\n                itemClassName: 'App-primaryControl',\r\n                onclick: this.newDiscussion.bind(this),\r\n                disabled: !canStartDiscussion\r\n            })\r\n        );\r\n\r\n        items.add('nav',\r\n            SelectDropdown.component({\r\n                children: this.navItems(this).toArray(),\r\n                buttonClassName: 'Button',\r\n                className: 'App-titleControl'\r\n            })\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the navigation in the sidebar of the index page. By\r\n     * default this is just the 'All Discussions' link.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    navItems() {\r\n        const items = new ItemList();\r\n        const params = this.stickyParams();\r\n\r\n        items.add('allDiscussions',\r\n            LinkButton.component({\r\n                href: app.route('index', params),\r\n                children: app.translator.trans('core.forum.index.all_discussions_link'),\r\n                icon: 'far fa-comments'\r\n            }),\r\n            100\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the part of the toolbar which is concerned with how\r\n     * the results are displayed. By default this is just a select box to change\r\n     * the way discussions are sorted.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    viewItems() {\r\n        const items = new ItemList();\r\n        const sortMap = app.cache.discussionList.sortMap();\r\n\r\n        const sortOptions = {};\r\n        for (const i in sortMap) {\r\n            sortOptions[i] = app.translator.trans('core.forum.index_sort.' + i + '_button');\r\n        }\r\n\r\n        items.add('sort',\r\n            Select.component({\r\n                options: sortOptions,\r\n                value: this.params().sort || Object.keys(sortMap)[0],\r\n                onchange: this.changeSort.bind(this)\r\n            })\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the part of the toolbar which is about taking action\r\n     * on the results. By default this is just a \"mark all as read\" button.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    actionItems() {\r\n        const items = new ItemList();\r\n\r\n        items.add('refresh',\r\n            Button.component({\r\n                title: app.translator.trans('core.forum.index.refresh_tooltip'),\r\n                icon: 'fas fa-refresh',\r\n                className: 'Button Button--icon',\r\n                onclick: () => app.cache.discussionList.refresh()\r\n            })\r\n        );\r\n\r\n        if (app.session.user) {\r\n            items.add('markAllAsRead',\r\n                Button.component({\r\n                    title: app.translator.trans('core.forum.index.mark_all_as_read_tooltip'),\r\n                    icon: 'fas fa-check',\r\n                    className: 'Button Button--icon',\r\n                    onclick: this.markAllAsRead.bind(this)\r\n                })\r\n            );\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Return the current search query, if any. This is implemented to activate\r\n     * the search box in the header.\r\n     *\r\n     * @see Search\r\n     * @return {String}\r\n     */\r\n    searching() {\r\n        return this.params().q;\r\n    }\r\n\r\n    /**\r\n     * Redirect to the index page without a search filter. This is called when the\r\n     * 'x' is clicked in the search box in the header.\r\n     *\r\n     * @see Search\r\n     */\r\n    clearSearch() {\r\n        const params = this.params();\r\n        delete params.q;\r\n\r\n        m.route(app.route(this.props.routeName, params));\r\n    }\r\n\r\n    /**\r\n     * Redirect to the index page using the given sort parameter.\r\n     *\r\n     * @param {String} sort\r\n     */\r\n    changeSort(sort) {\r\n        const params = this.params();\r\n\r\n        if (sort === Object.keys(app.cache.discussionList.sortMap())[0]) {\r\n            delete params.sort;\r\n        } else {\r\n            params.sort = sort;\r\n        }\r\n\r\n        m.route(app.route(this.props.routeName, params));\r\n    }\r\n\r\n    /**\r\n     * Get URL parameters that stick between filter changes.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    stickyParams() {\r\n        return {\r\n            sort: m.route.param('sort'),\r\n            q: m.route.param('q')\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get parameters to pass to the DiscussionList component.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    params() {\r\n        const params = this.stickyParams();\r\n\r\n        params.filter = m.route.param('filter');\r\n\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * Log the user in and then open the composer for a new discussion.\r\n     *\r\n     * @return {Promise}\r\n     */\r\n    newDiscussion() {\r\n        const deferred = m.deferred();\r\n\r\n        if (app.session.user) {\r\n            this.composeNewDiscussion(deferred);\r\n        } else {\r\n            app.modal.show(\r\n                new LogInModal({\r\n                    onlogin: this.composeNewDiscussion.bind(this, deferred)\r\n                })\r\n            );\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Initialize the composer for a new discussion.\r\n     *\r\n     * @param {Deferred} deferred\r\n     * @return {Promise}\r\n     */\r\n    composeNewDiscussion(deferred) {\r\n        const component = new DiscussionComposer({user: app.session.user});\r\n\r\n        app.composer.load(component);\r\n        app.composer.show();\r\n\r\n        deferred.resolve(component);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Mark all discussions as read.\r\n     *\r\n     * @return void\r\n     */\r\n    markAllAsRead() {\r\n        const confirmation = confirm(app.translator.trans('core.forum.index.mark_all_as_read_confirmation'));\r\n\r\n        if (confirmation) {\r\n            app.session.user.save({readTime: new Date()});\r\n        }\r\n    }\r\n}\r\n","import EventPost from \"flarum/components/EventPost\";\r\nimport recipientsLabel from \"../../common/helpers/recipientsLabel\";\r\n\r\nexport default class RecipientsModified extends EventPost {\r\n    static initProps(props) {\r\n        super.initProps(props);\r\n\r\n        function diff(diff1, diff2, store) {\r\n            return diff1\r\n                .filter(item => diff2.indexOf(item) === -1)\r\n                .map(id => app.store.getById(store, id));\r\n        }\r\n\r\n        const content = props.post.content();\r\n\r\n        // For event posts existing before groups functionality.\r\n        if (!content['new'] && content.length == 2) {\r\n            const oldRecipients = props.post.content()[0];\r\n            const newRecipients = props.post.content()[1];\r\n            props.added = diff(newRecipients, oldRecipients, 'users');\r\n            props.removed = diff(oldRecipients, newRecipients, 'users');\r\n        } else {\r\n            var usersAdded = diff(content['new']['users'], content['old']['users'], 'users');\r\n            var usersRemoved = diff(content['old']['users'], content['new']['users'], 'users');\r\n            var groupsAdded = diff(content['new']['groups'], content['old']['groups'], 'groups');\r\n            var groupsRemoved = diff(content['old']['groups'], content['new']['groups'], 'groups');\r\n\r\n            props.added = usersAdded.concat(groupsAdded);\r\n            props.removed = usersRemoved.concat(groupsRemoved);\r\n        }\r\n    }\r\n\r\n    icon() {\r\n        return 'far fa-map';\r\n    }\r\n\r\n    descriptionKey() {\r\n\r\n        var localeBase = 'fof-byobu.forum.post.recipients_modified.';\r\n\r\n        if (this.props.added.length) {\r\n            if (this.props.removed.length) {\r\n                return localeBase + 'added_and_removed';\r\n            }\r\n\r\n            return localeBase + 'added';\r\n        }\r\n\r\n        return localeBase + 'removed';\r\n    }\r\n\r\n    descriptionData() {\r\n        const data = {};\r\n\r\n        if (this.props.added.length) {\r\n            data.added = recipientsLabel(this.props.added, {link: true});\r\n        }\r\n\r\n        if (this.props.removed.length) {\r\n            data.removed = recipientsLabel(this.props.removed, {link: true});\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n","import Model from \"flarum/Model\";\r\nimport Discussion from \"flarum/models/Discussion\";\r\nimport User from \"flarum/models/User\";\r\nimport addRecipientComposer from \"./addRecipientComposer\";\r\nimport addRecipientLabels from \"./addRecipientLabels\";\r\nimport addRecipientsControl from \"./addRecipientsControl\";\r\nimport addHasRecipientsBadge from \"./addHasRecipientsBadge\";\r\nimport addDiscussPrivatelyControl from './addDiscussPrivatelyControl';\r\nimport addPrivacySetting from './addPrivacySetting';\r\nimport addPrivateDiscussionsPage from \"./addPrivateDiscussionsPage\";\r\n\r\nimport PrivateDiscussionIndex from \"./components/PrivateDiscussionIndex\";\r\nimport RecipientsModified from \"./components/RecipientsModified\";\r\n\r\napp.initializers.add('fof-byobu', function(app) {\r\n    app.routes.private_discussions = {path: '/private-discussions', component: PrivateDiscussionIndex.component()};\r\n\r\n    Discussion.prototype.recipientUsers = Model.hasMany('recipientUsers');\r\n    Discussion.prototype.oldRecipientUsers = Model.hasMany('oldRecipientUsers');\r\n    Discussion.prototype.recipientGroups = Model.hasMany('recipientGroups');\r\n    Discussion.prototype.oldRecipientGroups = Model.hasMany('oldRecipientGroups');\r\n\r\n    Discussion.prototype.canEditRecipients = Model.attribute('canEditRecipients');\r\n    Discussion.prototype.canEditUserRecipients = Model.attribute('canEditUserRecipients');\r\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\r\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\r\n\r\n    User.prototype.blocksPd = Model.attribute('blocksPd');\r\n\r\n    app.postComponents.recipientsModified = RecipientsModified;\r\n\r\n    addRecipientComposer(app);\r\n    addRecipientLabels();\r\n    addRecipientsControl();\r\n    addHasRecipientsBadge();\r\n    addPrivacySetting();\r\n\r\n    addDiscussPrivatelyControl();\r\n\r\n    addPrivateDiscussionsPage();\r\n});\r\n","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Search'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/WelcomeHero'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/SelectDropdown'];","module.exports = flarum.core.compat['components/EventPost'];"],"sourceRoot":""}